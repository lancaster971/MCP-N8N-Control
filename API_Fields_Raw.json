{
  "Workflow Endpoints": {
    "GET /workflows": {
      "status": 200,
      "headers": {
        "content-type": "application/json; charset=utf-8",
        "date": "Tue, 12 Aug 2025 12:10:09 GMT",
        "etag": "W/\"cdc2-cM99jao+HMeon8yrPkTtp4XCIbE\"",
        "strict-transport-security": "max-age=315360000; includeSubDomains; preload",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-xss-protection": "1; mode=block",
        "transfer-encoding": "chunked"
      },
      "data": {
        "data": [
          {
            "createdAt": "2025-06-20T13:50:12.556Z",
            "updatedAt": "2025-06-28T14:35:35.000Z",
            "id": "053vrF50XdC1ciOA",
            "name": "RETURN VALIDATION & INTAKE",
            "active": true,
            "isArchived": false,
            "nodes": [
              {
                "parameters": {
                  "jsCode": "// Mappa i dati del form\nconst motivoMap = {\n  'prodotto_errato': 'GOMMEGO',\n  'ordine_sbagliato': 'CLIENTE', \n  'difettoso': 'FORNITORE',\n  'danneggiato': 'CORRIERE'\n};\n\nreturn {\n  numero_ordine: $json['Numero Ordine'],\n  email_cliente: $json['Email Conferma Ordine'],\n  motivo_reso: $json['Motivo del Reso'],\n  responsabilita: motivoMap[$json['Motivo del Reso']],\n  descrizione_problema: $json['Descrizione del Problema']\n};"
                },
                "id": "38eac349-913b-4304-91f6-77e2762aa33e",
                "name": "Prepara Dati",
                "type": "n8n-nodes-base.code",
                "typeVersion": 1,
                "position": [
                  -1460,
                  -1880
                ]
              },
              {
                "parameters": {
                  "values": {
                    "string": [
                      {
                        "name": "rma",
                        "value": "RMA-2024-{{ Math.floor(Math.random() * 10000) }}"
                      },
                      {
                        "name": "Tipo Reso",
                        "value": "RESO CON ADDEBITO FORNITORE"
                      }
                    ]
                  },
                  "options": {}
                },
                "id": "ae8650ec-95c3-4161-a288-924c07aeb748",
                "name": "Genera RMA",
                "type": "n8n-nodes-base.set",
                "typeVersion": 1,
                "position": [
                  -1240,
                  -1620
                ]
              },
              {
                "parameters": {
                  "values": {
                    "string": [
                      {
                        "name": "Email fornitore",
                        "value": "Gentile Fornitore,\n\nRichiesta reso RMA: {{ $json.rma }}\nOrdine: {{ $json.numero_ordine }}\nMotivo: {{ $json.motivo_reso }}\n\nConfermare accettazione."
                      },
                      {
                        "name": "emailCliente",
                        "value": "Gentile Cliente,\n\nConfermiamo ricezione richiesta reso.\nRMA: {{ $json.rma }}\n\nTempo stimato: 7-10 giorni."
                      }
                    ]
                  },
                  "options": {}
                },
                "id": "d067e3cf-54b9-489c-844e-ab43abf17661",
                "name": "Prepara Email",
                "type": "n8n-nodes-base.set",
                "typeVersion": 1,
                "position": [
                  -300,
                  -340
                ]
              },
              {
                "parameters": {
                  "values": {
                    "string": [
                      {
                        "name": "message",
                        "value": "Richiesta reso registrata con successo! RMA: {{ $json.rma }}"
                      }
                    ]
                  },
                  "options": {}
                },
                "id": "cf01ed1a-17c0-4932-a1a6-dc6232b0650c",
                "name": "Response",
                "type": "n8n-nodes-base.set",
                "typeVersion": 1,
                "position": [
                  -1460,
                  -640
                ]
              },
              {
                "parameters": {
                  "formTitle": "FORM RESI  - RESTITUZIONE MERCI",
                  "formDescription": "Compila tutti i campi per la restituzione della merce",
                  "formFields": {
                    "values": [
                      {
                        "fieldLabel": "Nome e Cognome cliente",
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Email di conferma ordine",
                        "fieldType": "email",
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Nr Ordine",
                        "placeholder": "es.  YHHHGBFB",
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Data ricezione merce",
                        "fieldType": "date",
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Motivo della restituzione ",
                        "fieldType": "dropdown",
                        "fieldOptions": {
                          "values": [
                            {
                              "option": "Ho ricevuto merce sbagliata"
                            },
                            {
                              "option": "Ho ordinato merce sbagliata"
                            },
                            {
                              "option": "La merce è arrivata danneggiata "
                            },
                            {
                              "option": "La merce mi è stata consegnata con estremo ritardo"
                            }
                          ]
                        },
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Descrizione del problema ",
                        "fieldType": "textarea",
                        "placeholder": "descrivi brevemente il problema ",
                        "requiredField": true
                      },
                      {
                        "fieldLabel": "Allega una foto della merce ricevuta",
                        "fieldType": "file",
                        "requiredField": true
                      },
                      {
                        "fieldType": "html",
                        "elementName": "Documentazione Obbligatoria!",
                        "html": "<div style=\"background-color: #fef3c7; border: 2px solid #f59e0b; border-radius: 8px; padding: 16px; margin: 16px 0; font-family: Arial, sans-serif;\">\n    <p style=\"margin: 0 0 12px 0; font-weight: bold; color: #EA6B48; font-size: 16px; text-transform: uppercase;\">\n        DOCUMENTAZIONE OBBLIGATORIA\n    </p>\n    \n    <p style=\"margin: 0 0 12px 0; line-height: 1.5; color: #78350f;\">\n        In tutti i casi di reso merce <strong style=\"background-color: #fff; padding: 2px 4px; border-radius: 3px;\">è necessario allegare:\n    </p>\n    \n    <ul style=\"margin: 0 0 12px 0; padding-left: 20px; color: #78350f;\">\n        <li style=\"margin-bottom: 4px;\">Foto dell'imballo esterno che mostri eventuali danni</li>\n        <li>Foto dell'etichetta identificativa della merce ricevuta</li>\n    </ul>\n    \n    <p style=\"margin: 0; font-size: 13px; color: #92400e; font-style: italic;\">\n        La mancanza di documentazione fotografica potrebbe comportare il rifiuto della richiesta.\n    </p>\n</div>"
                      }
                    ]
                  },
                  "responseMode": "lastNode",
                  "options": {
                    "appendAttribution": false,
                    "buttonLabel": "Invia Richiesta",
                    "respondWithOptions": {
                      "values": {
                        "formSubmittedText": "La tua richiesta è stata registrata!"
                      }
                    },
                    "ignoreBots": true
                  }
                },
                "type": "n8n-nodes-base.formTrigger",
                "typeVersion": 2.2,
                "position": [
                  -1720,
                  800
                ],
                "id": "5447d3b9-3d2f-4794-b7db-35fda54e5d97",
                "name": "On form submission",
                "webhookId": "2c77a0da-6beb-48b1-acc8-bc20b702449e"
              },
              {
                "parameters": {
                  "values": {
                    "string": [
                      {
                        "name": "rma",
                        "value": "RMAGG-2025-{{ Math.floor(Math.random() * 10000) }}"
                      },
                      {
                        "name": "stato",
                        "value": "RESO CON ADDEBITO GOMMEGO"
                      }
                    ]
                  },
                  "options": {}
                },
                "id": "c7218c16-b4ae-4714-80e6-474124dc5bf0",
                "name": "Genera RMA1",
                "type": "n8n-nodes-base.set",
                "typeVersion": 1,
                "position": [
                  -1240,
                  -1420
                ]
              },
              {
                "parameters": {
                  "operation": "toBinary",
                  "sourceProperty": "Allega una foto della merce ricevuta (solo se Responsabilità di GommeGo)",
                  "options": {}
                },
                "type": "n8n-nodes-base.convertToFile",
                "typeVersion": 1.1,
                "position": [
                  -1460,
                  -1160
                ],
                "id": "656216f5-6795-491b-bf4d-76e96f0ab39f",
                "name": "Convert to File1"
              },
              {
                "parameters": {
                  "inputDataFieldName": "Allega_una_foto_della_merce_ricevuta",
                  "name": "={{ $('On form submission').item.json[\"Nr Ordine\"] }} - {{ $json[\"Nome e Cognome cliente\"] }} - {{ $json[\"Data ricezione merce\"] }}",
                  "driveId": {
                    "__rl": true,
                    "value": "My Drive",
                    "mode": "list",
                    "cachedResultName": "My Drive",
                    "cachedResultUrl": "https://drive.google.com/drive/my-drive"
                  },
                  "folderId": {
                    "__rl": true,
                    "value": "1PRKTIajj1Qyp74Te2fkwTYe4FlYPbrDv",
                    "mode": "list",
                    "cachedResultName": "IMMAGINI RESI CLIENTE",
                    "cachedResultUrl": "https://drive.google.com/drive/folders/1PRKTIajj1Qyp74Te2fkwTYe4FlYPbrDv"
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.googleDrive",
                "typeVersion": 3,
                "position": [
                  -1500,
                  1000
                ],
                "id": "7526b0d0-5110-4f97-90b1-197d969201d3",
                "name": "Carica immagini Merce",
                "credentials": {
                  "googleDriveOAuth2Api": {
                    "id": "WBhAeqmWykJUM02S",
                    "name": "Google Drive account"
                  }
                }
              },
              {
                "parameters": {
                  "resource": "image",
                  "operation": "analyze",
                  "modelId": {
                    "__rl": true,
                    "value": "chatgpt-4o-latest",
                    "mode": "list",
                    "cachedResultName": "CHATGPT-4O-LATEST"
                  },
                  "text": "Analizza il testo estratto dall'immagine e la descrizione dell'immagine per identificare informazioni sul prodotto e problemi del reso.\n\nIMPORTANTE: Dividi SEMPRE il tuo output in due sezioni ben distinte:\n1. **Testo estratto (in italiano):** [qui riporta TUTTO il testo OCR trovato nell'immagine]\n2. **Descrizione dell'immagine:** [qui descrivi cosa vedi nell'immagine]\n\nDal testo estratto, identifica le seguenti informazioni se presenti:\n\nINFORMAZIONI PRODOTTO:\n- Codice prodotto/SKU: cerca pattern come SKU, COD, CODE, CODICE, ART, REF seguiti da codici alfanumerici\n- Dimensioni pneumatico: cerca pattern come 225/45R17, 205/55 R16, ecc.\n- Marca/Brand: cerca parole come MARCA, BRAND, MARCHIO\n- Modello: cerca MODEL, MODELLO\n- Numero serie: cerca S/N, SERIAL, SERIE\n- Data produzione: cerca PROD, MFG, PRODUZIONE seguiti da date\n\nANALISI PROBLEMI (dalla descrizione dell'immagine):\n- Danno visibile: cerca riferimenti a danni, rotture, difetti, crepe, graffi, ammaccature\n- Prodotto errato: cerca indicazioni di prodotto diverso, errato, sbagliato, non corrisponde\n- Problema imballo: cerca riferimenti a imballo, scatola, confezione, pacco, busta\n- Componenti mancanti: cerca indicazioni di mancanza, assenza, incompleto\n- Problema qualità: cerca riferimenti a qualità, difetto, malfunzionamento\n\nFornisci un'analisi dettagliata identificando:\n1. Tipo di prodotto visibile\n2. Eventuali codici o etichette leggibili\n3. Problemi visibili che giustificano il reso\n4. Stato dell'imballo\n5. Corrispondenza con quanto ordinato (se deducibile)\n\nSii specifico e descrittivo nell'analisi dell'immagine per supportare la richiesta di reso.",
                  "inputType": "base64",
                  "binaryPropertyName": "Allega_una_foto_della_merce_ricevuta",
                  "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.openAi",
                "typeVersion": 1.8,
                "position": [
                  -1500,
                  800
                ],
                "id": "2d12910e-de5c-4e25-98ac-44c3dc2d99e7",
                "name": "Estrai Testo",
                "alwaysOutputData": true,
                "credentials": {
                  "openAiApi": {
                    "id": "PWlkktuNL3ZIywBy",
                    "name": "OpenAi account"
                  }
                }
              },
              {
                "parameters": {
                  "jsCode": "try {\n  // Ottieni i dati JSON del form\n  const formData = $input.first().json;\n  \n  // Il campo del file dal form\n  const fileField = formData[\"Carica il tuo documento (Carta d'identità o Patente)\"];\n  \n  if (!fileField || !Array.isArray(fileField) || fileField.length === 0) {\n    throw new Error('Nessun file caricato nel form');\n  }\n  \n  // Prendi il primo file\n  const fileInfo = fileField[0];\n  \n  // IMPORTANTE: n8n converte i nomi dei campi binari sostituendo caratteri speciali\n  // Il nome reale del campo binario è quello che vediamo nel debug\n  const binaryPropertyName = \"Carica_il_tuo_documento__Carta_d_identit__o_Patente_\";\n  \n  // Accedi ai dati binari\n  const binaryData = $input.first().binary;\n  \n  if (!binaryData || !binaryData[binaryPropertyName]) {\n    throw new Error(`Dati binari non trovati con chiave: ${binaryPropertyName}`);\n  }\n  \n  // Ottieni i dati binari specifici\n  const fileBinaryData = binaryData[binaryPropertyName];\n  \n  // Estrai informazioni\n  const fileName = fileInfo.filename;\n  const mimeType = fileInfo.mimetype;\n  const fileSize = fileInfo.size;\n  \n  // Inizializza i controlli di qualità\n  const qualityChecks = {\n    fileSize: { passed: false, message: '' },\n    fileType: { passed: false, message: '' },\n    imageQuality: { passed: false, message: '' }\n  };\n  \n  // 1. CONTROLLO DIMENSIONE FILE (max 10MB)\n  const maxSize = 10 * 1024 * 1024; // 10MB\n  const minSize = 50 * 1024; // 50KB\n  \n  if (fileSize > maxSize) {\n    qualityChecks.fileSize.passed = false;\n    qualityChecks.fileSize.message = `File troppo grande: ${(fileSize/1024/1024).toFixed(2)}MB (max 10MB)`;\n  } else if (fileSize < minSize) {\n    qualityChecks.fileSize.passed = false;\n    qualityChecks.fileSize.message = `File troppo piccolo: ${(fileSize/1024).toFixed(0)}KB (min 50KB)`;\n  } else {\n    qualityChecks.fileSize.passed = true;\n    qualityChecks.fileSize.message = `Dimensione OK: ${(fileSize/1024/1024).toFixed(2)}MB`;\n  }\n  \n  // 2. CONTROLLO TIPO FILE\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'];\n  if (allowedTypes.includes(mimeType)) {\n    qualityChecks.fileType.passed = true;\n    qualityChecks.fileType.message = `Formato supportato: ${mimeType}`;\n  } else {\n    qualityChecks.fileType.passed = false;\n    qualityChecks.fileType.message = `Formato non supportato: ${mimeType}`;\n  }\n  \n  // 3. ANALISI QUALITÀ IMMAGINE\n  if (mimeType.startsWith('image/')) {\n    const estimatedQuality = fileSize / 1024; // KB\n    \n    if (estimatedQuality < 100) {\n      qualityChecks.imageQuality.passed = false;\n      qualityChecks.imageQuality.message = 'Qualità insufficiente - immagine troppo compressa';\n    } else if (estimatedQuality < 200) {\n      qualityChecks.imageQuality.passed = true;\n      qualityChecks.imageQuality.message = 'Qualità accettabile ma non ottimale';\n    } else {\n      qualityChecks.imageQuality.passed = true;\n      qualityChecks.imageQuality.message = 'Qualità ottima per OCR';\n    }\n  } else if (mimeType === 'application/pdf') {\n    qualityChecks.imageQuality.passed = true;\n    qualityChecks.imageQuality.message = 'PDF - qualità non verificabile';\n  }\n  \n  // VALUTAZIONE FINALE\n  const allPassed = Object.values(qualityChecks).every(check => check.passed);\n  const validationStatus = allPassed ? 'PASSED' : 'REJECTED';\n  \n  // Calcola quality score\n  let qualityScore = 0;\n  if (qualityChecks.fileSize.passed) qualityScore += 33;\n  if (qualityChecks.fileType.passed) qualityScore += 33;\n  if (qualityChecks.imageQuality.passed) qualityScore += 34;\n  \n  // Prepara l'output\n  const result = {\n    json: {\n      validationStatus: validationStatus,\n      passed: allPassed,\n      fileName: fileName,\n      mimeType: mimeType,\n      fileSize: fileSize,\n      fileSizeReadable: `${(fileSize/1024/1024).toFixed(2)}MB`,\n      qualityChecks: qualityChecks,\n      qualityScore: qualityScore,\n      userMessage: allPassed ? \n        '✅ Documento valido e pronto per elaborazione OCR' : \n        '❌ Documento non supera i controlli di qualità',\n      validatedAt: new Date().toISOString()\n    }\n  };\n  \n  // Se PASSED, passa i dati binari con il nome corretto\n  if (allPassed) {\n    result.binary = {\n      data: fileBinaryData  // Usa l'oggetto binary del file\n    };\n  }\n  \n  return result;\n  \n} catch (error) {\n  return {\n    json: {\n      validationStatus: 'REJECTED',\n      passed: false,\n      error: error.message,\n      userMessage: `❌ Errore validazione: ${error.message}`,\n      validatedAt: new Date().toISOString()\n    }\n  };\n}"
                },
                "id": "573b36a3-eeed-4441-a3e3-35c1299a8386",
                "name": "Validazione File",
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                  -1460,
                  -900
                ],
                "notes": "Valida il file caricato: controlla formato, dimensione e prepara per upload. Converte da base64 a binary."
              },
              {
                "parameters": {
                  "jsCode": "const raw = $input.first().json.content;\nif (!raw) throw new Error('Nessun testo OCR rilevato');\n\n// Dividi il content in due parti\nconst parts = raw.split('**Descrizione dell\\'immagine:**');\nconst testoEstratto = parts[0] ? parts[0].replace(/\\*\\*Testo estratto \\(in italiano\\):\\*\\*/, '').trim() : '';\nconst descrizioneImmagine = parts[1] ? parts[1].trim() : '';\n\n// Output semplice con solo le due parti divise\nconst output = {\n  testo_estratto: testoEstratto,\n  descrizione_immagine: descrizioneImmagine\n};\n\nreturn [{ json: output }];"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                  -1280,
                  800
                ],
                "id": "615e7911-cc0c-45dc-8075-233b8355f466",
                "name": "Formatta Dati",
                "alwaysOutputData": true
              },
              {
                "parameters": {
                  "assignments": {
                    "assignments": [
                      {
                        "id": "f74c1e5b-5838-4281-89a2-dfcc04062d6a",
                        "name": "Nome e Cognome cliente",
                        "value": "={{ $json[\"Nome e Cognome cliente\"] }}",
                        "type": "string"
                      },
                      {
                        "id": "04c68c45-ed7a-4356-8820-8653bcaa7b9b",
                        "name": "Email di conferma ordine",
                        "value": "={{ $json[\"Email di conferma ordine\"] }}",
                        "type": "string"
                      },
                      {
                        "id": "e0bc77a9-c169-4978-975b-6ad313932e32",
                        "name": "Nr Ordine",
                        "value": "={{ $json[\"Nr Ordine\"] }}",
                        "type": "string"
                      },
                      {
                        "id": "6482f6e5-91d1-4d54-b33b-04dfcda273c0",
                        "name": "Data ricezione merce",
                        "value": "={{ $json[\"Data ricezione merce\"] }}",
                        "type": "string"
                      },
                      {
                        "id": "4a6b92f0-3d8c-4aae-9d62-f165608aa26e",
                        "name": "Motivo della restituzione ",
                        "value": "={{ $json[\"Motivo della restituzione \"] }}",
                        "type": "string"
                      },
                      {
                        "id": "2d845429-6d32-4d37-9e75-92de5ff54e8e",
                        "name": "Descrizione del problema ",
                        "value": "={{ $json[\"Descrizione del problema \"] }}",
                        "type": "string"
                      },
                      {
                        "id": "2293d184-239a-4047-8ee1-a6071b6669f4",
                        "name": "=Foto allegate?",
                        "value": "={{ $json[\"Allega una foto della merce ricevuta (solo se Responsabilità di GommeGo)\"] ? true : false }}",
                        "type": "string"
                      },
                      {
                        "id": "bcfd8dcd-6b63-4a9a-acfc-f4f23aa9174e",
                        "name": "data inoltro richiesta",
                        "value": "={{ new Date($json[\"submittedAt\"]).toISOString().slice(0, 10) }}",
                        "type": "string"
                      }
                    ]
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                  -1500,
                  620
                ],
                "id": "9a4be39a-2d56-4216-a87d-8d01b4c92064",
                "name": "Mappa Dati",
                "alwaysOutputData": true
              },
              {
                "parameters": {
                  "mode": "combine",
                  "combineBy": "combineByPosition",
                  "numberInputs": 3,
                  "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                  -1000,
                  800
                ],
                "id": "1c221a12-42b0-4a26-ac31-88d8a82f7259",
                "name": "Merge"
              },
              {
                "parameters": {
                  "modelName": "models/gemini-1.5-flash-latest",
                  "options": {}
                },
                "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
                "typeVersion": 1,
                "position": [
                  -760,
                  660
                ],
                "id": "7573708d-d1e4-4cc4-9ca4-751fdc0227fc",
                "name": "Google Gemini Chat Model",
                "credentials": {
                  "googlePalmApi": {
                    "id": "owVOESxC0E1TNLDF",
                    "name": "Google Gemini(PaLM) GommeGo"
                  }
                }
              },
              {
                "parameters": {
                  "workflowId": {
                    "__rl": true,
                    "value": "dQ0r6zTsY02PDG8X",
                    "mode": "list",
                    "cachedResultName": "SUB_API_INFO_ORDER & PARCELSAPP"
                  },
                  "workflowInputs": {
                    "mappingMode": "defineBelow",
                    "value": {},
                    "matchingColumns": [],
                    "schema": [],
                    "attemptToConvertTypes": false,
                    "convertFieldsToString": false
                  }
                },
                "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
                "typeVersion": 2.2,
                "position": [
                  -640,
                  660
                ],
                "id": "fd69801c-14d6-4e42-847e-4e7447d9ef31",
                "name": "Call n8n Workflow Tool"
              },
              {
                "parameters": {
                  "descriptionType": "manual",
                  "toolDescription": "Da questo tool devi prendere il campo ",
                  "operation": "get",
                  "tableId": "orders_processed"
                },
                "type": "n8n-nodes-base.supabaseTool",
                "typeVersion": 1,
                "position": [
                  -520,
                  660
                ],
                "id": "7ac4e5fe-625d-4b24-88d8-3c6912da57fe",
                "name": "Supabase",
                "credentials": {
                  "supabaseApi": {
                    "id": "BkVV9D4yOfHR3iC4",
                    "name": "Supabase tecsolutions"
                  }
                }
              },
              {
                "parameters": {
                  "promptType": "define",
                  "text": "=",
                  "options": {
                    "systemMessage": ""
                  }
                },
                "id": "fd30b17b-fe8b-4dff-bad0-8c49dcf20b36",
                "name": "VALIDAZIONE E INTAKE",
                "type": "@n8n/n8n-nodes-langchain.agent",
                "typeVersion": 1.7,
                "position": [
                  -720,
                  440
                ],
                "notesInFlow": true,
                "notes": "🔹 Agente AI per diagnosi embedding"
              },
              {
                "parameters": {
                  "conditions": {
                    "options": {
                      "caseSensitive": true,
                      "leftValue": "",
                      "typeValidation": "strict",
                      "version": 2
                    },
                    "conditions": [
                      {
                        "id": "ea0dc5bb-61a5-4a42-adab-6e6593f92088",
                        "leftValue": "={{ $json[\"Motivo della restituzione \"] }}",
                        "rightValue": "(Responsabilità di GommeGo)",
                        "operator": {
                          "type": "string",
                          "operation": "contains"
                        }
                      }
                    ],
                    "combinator": "and"
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                  -1460,
                  -1520
                ],
                "id": "53c07006-4a08-4875-a701-ace9ecf5287c",
                "name": "If"
              },
              {
                "parameters": {
                  "content": "## Mappatura dati e foto\n\n1) estrazione dei dati del form\n2 )Analisi della foto allegata con estrazione testo e descrizione\n\n3) Salvataggio foto con nuova nome",
                  "height": 660,
                  "width": 580,
                  "color": 7
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  -1700,
                  -1400
                ],
                "typeVersion": 1,
                "id": "65843ec0-ba6f-4a1a-8d63-9bd62ed3a21a",
                "name": "Sticky Note"
              },
              {
                "parameters": {
                  "assignments": {
                    "assignments": [
                      {
                        "id": "e44032c9-0758-4119-8022-000f536bcf2e",
                        "name": "Nome Foto Allegata",
                        "value": "={{ $json.name }}",
                        "type": "string"
                      }
                    ]
                  },
                  "options": {
                    "ignoreConversionErrors": false
                  }
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                  -1280,
                  1000
                ],
                "id": "f107f741-3385-4e54-8ed9-5cd022d774ed",
                "name": "Mappa nome File",
                "alwaysOutputData": true
              },
              {
                "parameters": {
                  "workflowId": {
                    "__rl": true,
                    "value": "ZSnrpT2XPhUmFAVE",
                    "mode": "list",
                    "cachedResultName": "SUB_RETURN_INFO_ORDER & PARCELSAPP"
                  },
                  "workflowInputs": {
                    "mappingMode": "defineBelow",
                    "value": {},
                    "matchingColumns": [],
                    "schema": [],
                    "attemptToConvertTypes": false,
                    "convertFieldsToString": true
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.executeWorkflow",
                "typeVersion": 1.2,
                "position": [
                  -580,
                  920
                ],
                "id": "542a801d-dd7d-47b1-a2fc-22310963c220",
                "name": "Execute Workflow"
              },
              {
                "parameters": {
                  "assignments": {
                    "assignments": [
                      {
                        "id": "9f9d467c-4eb4-404c-82a6-027c6c997fc7",
                        "name": "query",
                        "value": "={{ $json[\"Nr Ordine\"] }}",
                        "type": "string"
                      }
                    ]
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.set",
                "typeVersion": 3.4,
                "position": [
                  -800,
                  920
                ],
                "id": "aeb3ac24-840a-4623-b9a5-4bf04f1a9d62",
                "name": "MAPPA NUMERO ORDINE"
              },
              {
                "parameters": {
                  "tableId": "return_orders",
                  "fieldsUi": {
                    "fieldValues": [
                      {
                        "fieldId": "order_found",
                        "fieldValue": "={{ $json.orderFound }}"
                      },
                      {
                        "fieldId": "rma_id"
                      },
                      {
                        "fieldId": "customer_full_name",
                        "fieldValue": "={{ $json[\"Nome e Cognome cliente\"] }}"
                      },
                      {
                        "fieldId": "customer_email",
                        "fieldValue": "={{ $json[\"Email di conferma ordine\"] }}"
                      },
                      {
                        "fieldId": "order_reference",
                        "fieldValue": "={{ $json[\"Nr Ordine\"] }}"
                      },
                      {
                        "fieldId": "data_ricezione_merce",
                        "fieldValue": "={{ $json[\"Data ricezione merce\"] }}"
                      },
                      {
                        "fieldId": "data_inoltro_richiesta",
                        "fieldValue": "={{ $json[\"data inoltro richiesta\"] }}"
                      },
                      {
                        "fieldId": "motivo_restituzione",
                        "fieldValue": "={{ $json[\"Motivo della restituzione \"] }}"
                      },
                      {
                        "fieldId": "descrizione_problema",
                        "fieldValue": "={{ $json[\"Descrizione del problema \"] }}"
                      },
                      {
                        "fieldId": "foto_allegate",
                        "fieldValue": "={{ $json[\"Foto allegate?\"] }}"
                      },
                      {
                        "fieldId": "nome_foto_allegata",
                        "fieldValue": "={{ $json[\"Nome Foto Allegata\"] }}"
                      },
                      {
                        "fieldId": "testo_estratto",
                        "fieldValue": "={{ $json.testo_estratto }}"
                      },
                      {
                        "fieldId": "descrizione_immagine",
                        "fieldValue": "={{ $json.descrizione_immagine }}"
                      },
                      {
                        "fieldId": "order_products_0_name",
                        "fieldValue": "={{ $json.order_products_0_name }}"
                      },
                      {
                        "fieldId": "order_products_0_reference",
                        "fieldValue": "={{ $json.order_products_0_reference }}"
                      },
                      {
                        "fieldId": "order_products_0_ean",
                        "fieldValue": "={{ $json.order_products_0_ean }}"
                      },
                      {
                        "fieldId": "order_products_0_quantity",
                        "fieldValue": "={{ $json.order_products_0_quantity }}"
                      },
                      {
                        "fieldId": "order_products_0_unit_price",
                        "fieldValue": "={{ $json.order_products_0_unit_price }}"
                      },
                      {
                        "fieldId": "order_products_0_total_price",
                        "fieldValue": "={{ $json.order_products_0_total_price }}"
                      },
                      {
                        "fieldId": "order_products_1_name",
                        "fieldValue": "={{ $json.customer_email }}"
                      },
                      {
                        "fieldId": "order_products_1_reference",
                        "fieldValue": "={{ $json[\"order_products_1_reference\"] || null }}"
                      },
                      {
                        "fieldId": "order_products_1_ean",
                        "fieldValue": "={{ $json[\"order_products_1_ean\"] || null }}"
                      },
                      {
                        "fieldId": "order_products_1_quantity",
                        "fieldValue": "={{ $json[\"order_products_1_quantity\"] ?? null }}"
                      },
                      {
                        "fieldId": "order_products_1_unit_price",
                        "fieldValue": "={{ $json[\"order_products_1_unit_price\"] || null }}"
                      },
                      {
                        "fieldId": "order_products_1_total_price",
                        "fieldValue": "={{ $json[\"order_products_1_total_price\"] || null }}"
                      },
                      {
                        "fieldId": "shipment_arrival_date",
                        "fieldValue": "={{ $json.shipment_arrival_date }}"
                      },
                      {
                        "fieldId": "shipment_tracking_number",
                        "fieldValue": "={{ $json.shipment_tracking_number }}"
                      },
                      {
                        "fieldId": "shipment_tracking_url",
                        "fieldValue": "={{ $json.shipment_tracking_url }}"
                      },
                      {
                        "fieldId": "reso_autorizzato",
                        "fieldValue": "={{ $json[\"reso richiesto entro 14 giorni\"] }}"
                      },
                      {
                        "fieldId": "giorni_trascorsi",
                        "fieldValue": "={{ $json[\"giorni passati\"] }}"
                      }
                    ]
                  }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                  260,
                  420
                ],
                "id": "1afa0ba6-398e-4319-8787-227e3c2001a6",
                "name": "INSERT CAMPI RMA",
                "credentials": {
                  "supabaseApi": {
                    "id": "BkVV9D4yOfHR3iC4",
                    "name": "Supabase tecsolutions"
                  }
                }
              },
              {
                "parameters": {
                  "tableId": "return_orders",
                  "fieldsUi": {
                    "fieldValues": [
                      {
                        "fieldId": "order_status",
                        "fieldValue": "={{ $json.order_status }}"
                      },
                      {
                        "fieldId": "order_total_paid",
                        "fieldValue": "={{ $json.order_total_paid }}"
                      },
                      {
                        "fieldId": "order_total_products",
                        "fieldValue": "={{ $json.order_total_products }}"
                      },
                      {
                        "fieldId": "order_total_products_with_tax",
                        "fieldValue": "={{ $json.order_total_products_with_tax }}"
                      },
                      {
                        "fieldId": "order_products_0_name",
                        "fieldValue": "={{ $json.order_products_0_name }}"
                      },
                      {
                        "fieldId": "order_products_0_reference",
                        "fieldValue": "={{ $json.order_products_0_reference }}"
                      },
                      {
                        "fieldId": "order_products_0_ean",
                        "fieldValue": "={{ $json.order_products_0_ean }}"
                      },
                      {
                        "fieldId": "order_products_0_quantity",
                        "fieldValue": "={{ $json.order_products_0_quantity }}"
                      },
                      {
                        "fieldId": "order_products_0_unit_price",
                        "fieldValue": "={{ $json.order_products_0_unit_price }}"
                      },
                      {
                        "fieldId": "order_products_0_total_price",
                        "fieldValue": "={{ $json.order_products_0_total_price }}"
                      },
                      {
                        "fieldId": "order_products_1_name",
                        "fieldValue": "={{ $json.order_products_1_name }}"
                      },
                      {
                        "fieldId": "order_products_1_reference",
                        "fieldValue": "={{ $json.order_products_1_reference }}"
                      },
                      {
                        "fieldId": "order_products_1_ean",
                        "fieldValue": "={{ $json.order_products_1_ean }}"
                      },
                      {
                        "fieldId": "order_products_1_quantity",
                        "fieldValue": "={{ $json.order_products_1_quantity }}"
                      },
                      {
                        "fieldId": "order_products_1_unit_price",
                        "fieldValue": "={{ $json.order_products_1_unit_price }}"
                      },
                      {
                        "fieldId": "order_products_1_total_price",
                        "fieldValue": "={{ $json.order_products_1_total_price }}"
                      },
                      {
                        "fieldId": "customer_full_name",
                        "fieldValue": "={{ $json.customer_full_name }}"
                      },
                      {
                        "fieldId": "customer_email",
                        "fieldValue": "={{ $json.customer_email }}"
                      },
                      {
                        "fieldId": "customer_phone",
                        "fieldValue": "={{ $json.customer_phone }}"
                      },
                      {
                        "fieldId": "delivery_recipient",
                        "fieldValue": "={{ $json.delivery_recipient }}"
                      },
                      {
                        "fieldId": "delivery_street",
                        "fieldValue": "={{ $json.delivery_street }}"
                      },
                      {
                        "fieldId": "delivery_postcode",
                        "fieldValue": "={{ $json.delivery_postcode }}"
                      },
                      {
                        "fieldId": "delivery_country",
                        "fieldValue": "={{ $json.delivery_country }}"
                      },
                      {
                        "fieldId": "delivery_phone",
                        "fieldValue": "={{ $json.delivery_phone }}"
                      },
                      {
                        "fieldId": "delivery_fiscal_code",
                        "fieldValue": "={{ $json.delivery_fiscal_code }}"
                      },
                      {
                        "fieldId": "shipment_tracking_url",
                        "fieldValue": "={{ $json.shipment_tracking_url }}"
                      },
                      {
                        "fieldId": "shipment_latest_status",
                        "fieldValue": "={{ $json.shipment_latest_status }}"
                      },
                      {
                        "fieldId": "shipment_latest_status_date",
                        "fieldValue": "={{ $json.shipment_latest_status_date }}"
                      },
                      {
                        "fieldId": "shipment_departure_date",
                        "fieldValue": "={{ $json.shipment_departure_date }}"
                      },
                      {
                        "fieldId": "shipment_transit_days",
                        "fieldValue": "={{ $json.shipment_transit_days ? $json.shipment_transit_days : null }}"
                      },
                      {
                        "fieldId": "response",
                        "fieldValue": "={{ $json.Response }}"
                      },
                      {
                        "fieldId": "delivery_city",
                        "fieldValue": "={{ $json.delivery_city }}"
                      },
                      {
                        "fieldId": "order_reference",
                        "fieldValue": "={{ $json.order_reference }}"
                      },
                      {
                        "fieldId": "order_found",
                        "fieldValue": "={{ $json.orderFound }}"
                      }
                    ]
                  }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                  60,
                  -300
                ],
                "id": "2593691e-4c3a-4749-a8f3-3e2b46ddc9d9",
                "name": "Supabase1",
                "credentials": {
                  "supabaseApi": {
                    "id": "BkVV9D4yOfHR3iC4",
                    "name": "Supabase tecsolutions"
                  }
                }
              },
              {
                "parameters": {
                  "mode": "combine",
                  "combineBy": "combineByPosition",
                  "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.2,
                "position": [
                  -380,
                  820
                ],
                "id": "1574316b-79f2-462b-a0ea-e23dad70dae1",
                "name": "Merge1"
              },
              {
                "parameters": {
                  "values": {
                    "string": [
                      {
                        "name": "Email fornitore",
                        "value": "Gentile Fornitore,\n\nRichiesta reso RMA: {{ $json.rma }}\nOrdine: {{ $json.numero_ordine }}\nMotivo: {{ $json.motivo_reso }}\n\nConfermare accettazione."
                      },
                      {
                        "name": "emailCliente",
                        "value": "Gentile Cliente,\n\nConfermiamo ricezione richiesta reso.\nRMA: {{ $json.rma }}\n\nTempo stimato: 7-10 giorni."
                      }
                    ]
                  },
                  "options": {}
                },
                "id": "3930d1c9-37bd-46c8-842d-a3c52933cee7",
                "name": "Prepara Email1",
                "type": "n8n-nodes-base.set",
                "typeVersion": 1,
                "position": [
                  -740,
                  -400
                ]
              },
              {
                "parameters": {
                  "operation": "completion",
                  "completionTitle": "La sua richiesta non può essere accettata ",
                  "completionMessage": "=Gentile {{ $json[\"Nome e Cognome cliente\"] }},\n\nil numero d’ordine \"{{ $json[\"Nr Ordine\"] }}\" non risulta presente nei nostri sistemi.  \nÈ possibile che si tratti di un errore di digitazione.\n\nLa invitiamo cortesemente a VERIFICARE IL NUMERO e riprovare l’invio del modulo.\n\nCordiali saluti,  \nIl Team di GommeGo\n\n\n",
                  "options": {}
                },
                "type": "n8n-nodes-base.form",
                "typeVersion": 1,
                "position": [
                  -20,
                  1180
                ],
                "id": "33c9d919-0e79-4adf-ad33-7d16628b9001",
                "name": "Form",
                "webhookId": "519b8f23-e21c-430e-a1ee-45e8570596f8"
              },
              {
                "parameters": {
                  "conditions": {
                    "options": {
                      "caseSensitive": true,
                      "leftValue": "",
                      "typeValidation": "strict",
                      "version": 2
                    },
                    "conditions": [
                      {
                        "id": "94837f50-81d1-458b-a3aa-2b02d7edaf79",
                        "leftValue": "={{ $json.orderFound }}",
                        "rightValue": "",
                        "operator": {
                          "type": "boolean",
                          "operation": "true",
                          "singleValue": true
                        }
                      }
                    ],
                    "combinator": "or"
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                  -220,
                  820
                ],
                "id": "91f776f9-9656-4669-aedd-6e99e472a56c",
                "name": "numero ordine esiste?"
              },
              {
                "parameters": {
                  "conditions": {
                    "options": {
                      "caseSensitive": true,
                      "leftValue": "",
                      "typeValidation": "strict",
                      "version": 2
                    },
                    "conditions": [
                      {
                        "id": "d0279021-41d8-4165-a97a-0cb79b83ac1b",
                        "leftValue": "={{ $json[\"reso richiesto entro 14 giorni\"] }}",
                        "rightValue": "",
                        "operator": {
                          "type": "boolean",
                          "operation": "true",
                          "singleValue": true
                        }
                      }
                    ],
                    "combinator": "and"
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.if",
                "typeVersion": 2.2,
                "position": [
                  140,
                  800
                ],
                "id": "a7eccebc-62d1-4983-be2b-a13a89ef54a4",
                "name": "If1"
              },
              {
                "parameters": {
                  "operation": "completion",
                  "completionTitle": "La sua richiesta non può essere accettata ",
                  "completionMessage": "=Gentile {{ $json[\"Nome e Cognome cliente\"] }},\nSiamo Spiacenti ma il suo ordine \"{{ $json[\"Nr Ordine\"] }}\" non è rimborsabile in quanto dalla data della sua richiesta avvenuta il {{ $json[\"data inoltro richiesta\"] }} sono passati {{ $json[\"giorni passati\"] }} giorni, quindi oltre il limite stabilito dalla nostre politiche di reso accettate al momento dell'ordine.\n\nRestiamo a sua completa disposizione \n\nCordiali saluti,  \nIl Team di GommeGo\n\n\n",
                  "options": {}
                },
                "type": "n8n-nodes-base.form",
                "typeVersion": 1,
                "position": [
                  380,
                  900
                ],
                "id": "d04eb0a1-6106-403f-9b2d-5562317cfdc5",
                "name": "Form1",
                "webhookId": "519b8f23-e21c-430e-a1ee-45e8570596f8"
              },
              {
                "parameters": {
                  "jsCode": "const input = items[0].json;\n\nconst dataConsegnaRaw = input[\"shipment_arrival_date\"];\nconst dataRichiestaRaw = input[\"data inoltro richiesta\"];\n\n// Funzione per generare codice richiesta alfanumerico\nfunction generaCodiceRichiesta(length = 10) {\n  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let codice = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    codice += charset[randomIndex];\n  }\n  return codice;\n}\n\nif (!dataConsegnaRaw || !dataRichiestaRaw) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Dati mancanti\",\n      \"reso richiesto entro 14 giorni\": null,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n}\n\ntry {\n  // Normalizza entrambe le date in formato YYYY-MM-DD\n  const dataConsegna = new Date(dataConsegnaRaw);\n  const dataRichiesta = new Date(dataRichiestaRaw);\n\n  const giornoConsegnaStr = dataConsegna.toISOString().slice(0, 10);\n  const giornoRichiestaStr = dataRichiesta.toISOString().slice(0, 10);\n\n  const giornoConsegna = new Date(giornoConsegnaStr);\n  const giornoRichiesta = new Date(giornoRichiestaStr);\n\n  const diffInMs = giornoRichiesta - giornoConsegna;\n  const diffInGiorni = diffInMs / (1000 * 60 * 60 * 24);\n  const entro14 = diffInGiorni >= 0 && diffInGiorni <= 14;\n\n  return [{\n    json: {\n      ...input,\n      \"shipment_arrival_date_normalizzata\": giornoConsegnaStr,\n      \"data_inoltro_richiesta_normalizzata\": giornoRichiestaStr,\n      \"reso richiesto entro 14 giorni\": entro14,\n      \"giorni passati\": diffInGiorni,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n} catch (error) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Errore nel parsing delle date\",\n      \"dettaglio\": error.message,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n}\n"
                },
                "type": "n8n-nodes-base.code",
                "typeVersion": 2,
                "position": [
                  -20,
                  800
                ],
                "id": "a2350439-41fc-432f-858e-44cccea9bf52",
                "name": "Validazione ed RMA",
                "notes": "const input = items[0].json;\n\nconst dataConsegnaRaw = input[\"shipment_arrival_date\"];\nconst dataRichiestaRaw = input[\"data inoltro richiesta\"];\n\nif (!dataConsegnaRaw || !dataRichiestaRaw) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Dati mancanti\",\n      \"reso richiesto entro 14 giorni\": null\n    }\n  }];\n}\n\ntry {\n  // Normalizza entrambe le date in formato YYYY-MM-DD\n  const dataConsegna = new Date(dataConsegnaRaw);\n  const dataRichiesta = new Date(dataRichiestaRaw);\n\n  const giornoConsegnaStr = dataConsegna.toISOString().slice(0, 10);\n  const giornoRichiestaStr = dataRichiesta.toISOString().slice(0, 10);\n\n  const giornoConsegna = new Date(giornoConsegnaStr);\n  const giornoRichiesta = new Date(giornoRichiestaStr);\n\n  const diffInMs = giornoRichiesta - giornoConsegna;\n  const diffInGiorni = diffInMs / (1000 * 60 * 60 * 24);\n  const entro14 = diffInGiorni >= 0 && diffInGiorni <= 14;\n\n  return [{\n    json: {\n      ...input,\n      \"shipment_arrival_date_normalizzata\": giornoConsegnaStr,\n      \"data_inoltro_richiesta_normalizzata\": giornoRichiestaStr,\n      \"reso richiesto entro 14 giorni\": entro14,\n      \"giorni passati\": diffInGiorni\n    }\n  }];\n} catch (error) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Errore nel parsing delle date\",\n      \"dettaglio\": error.message\n    }\n  }];\n}\n"
              },
              {
                "parameters": {
                  "operation": "upsert",
                  "schema": {
                    "__rl": true,
                    "mode": "list",
                    "value": "public"
                  },
                  "table": {
                    "__rl": true,
                    "value": "return_orders",
                    "mode": "list",
                    "cachedResultName": "return_orders"
                  },
                  "columns": {
                    "mappingMode": "defineBelow",
                    "value": {},
                    "matchingColumns": [],
                    "schema": [
                      {
                        "id": "order_found",
                        "displayName": "order_found",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "rma_id",
                        "displayName": "rma_id",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "customer_full_name",
                        "displayName": "customer_full_name",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "customer_email",
                        "displayName": "customer_email",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_reference",
                        "displayName": "order_reference",
                        "required": true,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": true
                      },
                      {
                        "id": "data_ricezione_merce",
                        "displayName": "data_ricezione_merce",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "dateTime",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "data_inoltro_richiesta",
                        "displayName": "data_inoltro_richiesta",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "dateTime",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "motivo_restituzione",
                        "displayName": "motivo_restituzione",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "descrizione_problema",
                        "displayName": "descrizione_problema",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "foto_allegate",
                        "displayName": "foto_allegate",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "nome_foto_allegata",
                        "displayName": "nome_foto_allegata",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "testo_estratto",
                        "displayName": "testo_estratto",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "descrizione_immagine",
                        "displayName": "descrizione_immagine",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_name",
                        "displayName": "order_products_0_name",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_reference",
                        "displayName": "order_products_0_reference",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_ean",
                        "displayName": "order_products_0_ean",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_quantity",
                        "displayName": "order_products_0_quantity",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "number",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_unit_price",
                        "displayName": "order_products_0_unit_price",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_0_total_price",
                        "displayName": "order_products_0_total_price",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_name",
                        "displayName": "order_products_1_name",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_reference",
                        "displayName": "order_products_1_reference",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_ean",
                        "displayName": "order_products_1_ean",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_quantity",
                        "displayName": "order_products_1_quantity",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "number",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_unit_price",
                        "displayName": "order_products_1_unit_price",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "order_products_1_total_price",
                        "displayName": "order_products_1_total_price",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "shipment_arrival_date",
                        "displayName": "shipment_arrival_date",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "dateTime",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "shipment_tracking_number",
                        "displayName": "shipment_tracking_number",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "shipment_tracking_url",
                        "displayName": "shipment_tracking_url",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "reso_autorizzato",
                        "displayName": "reso_autorizzato",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "giorni_trascorsi",
                        "displayName": "giorni_trascorsi",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "number",
                        "canBeUsedToMatch": false
                      },
                      {
                        "id": "codice_richiesta_form",
                        "displayName": "codice_richiesta_form",
                        "required": false,
                        "defaultMatch": false,
                        "display": true,
                        "type": "string",
                        "canBeUsedToMatch": false
                      }
                    ],
                    "attemptToConvertTypes": false,
                    "convertFieldsToString": false
                  },
                  "options": {}
                },
                "type": "n8n-nodes-base.postgres",
                "typeVersion": 2.6,
                "position": [
                  380,
                  680
                ],
                "id": "eec45c2e-0e1d-4910-b47c-3e70417cd16a",
                "name": "UPSERT CAMPI RMA",
                "credentials": {
                  "postgres": {
                    "id": "jBT1O3LaStZrwqsC",
                    "name": "Postgres Supabase TEC"
                  }
                }
              }
            ],
            "connections": {
              "Genera RMA": {
                "main": [
                  []
                ]
              },
              "Prepara Email": {
                "main": [
                  []
                ]
              },
              "On form submission": {
                "main": [
                  [
                    {
                      "node": "Mappa Dati",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Estrai Testo",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "Carica immagini Merce",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Prepara Dati": {
                "main": [
                  []
                ]
              },
              "Genera RMA1": {
                "main": [
                  []
                ]
              },
              "Convert to File1": {
                "main": [
                  []
                ]
              },
              "Estrai Testo": {
                "main": [
                  [
                    {
                      "node": "Formatta Dati",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Validazione File": {
                "main": [
                  []
                ]
              },
              "Mappa Dati": {
                "main": [
                  [
                    {
                      "node": "Merge",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Formatta Dati": {
                "main": [
                  [
                    {
                      "node": "Merge",
                      "type": "main",
                      "index": 1
                    }
                  ]
                ]
              },
              "Merge": {
                "main": [
                  [
                    {
                      "node": "Merge1",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "MAPPA NUMERO ORDINE",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Google Gemini Chat Model": {
                "ai_languageModel": [
                  [
                    {
                      "node": "VALIDAZIONE E INTAKE",
                      "type": "ai_languageModel",
                      "index": 0
                    }
                  ]
                ]
              },
              "Call n8n Workflow Tool": {
                "ai_tool": [
                  [
                    {
                      "node": "VALIDAZIONE E INTAKE",
                      "type": "ai_tool",
                      "index": 0
                    }
                  ]
                ]
              },
              "Supabase": {
                "ai_tool": [
                  [
                    {
                      "node": "VALIDAZIONE E INTAKE",
                      "type": "ai_tool",
                      "index": 0
                    }
                  ]
                ]
              },
              "Carica immagini Merce": {
                "main": [
                  [
                    {
                      "node": "Mappa nome File",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "If": {
                "main": [
                  [
                    {
                      "node": "Genera RMA",
                      "type": "main",
                      "index": 0
                    }
                  ],
                  [
                    {
                      "node": "Genera RMA1",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Mappa nome File": {
                "main": [
                  [
                    {
                      "node": "Merge",
                      "type": "main",
                      "index": 2
                    }
                  ]
                ]
              },
              "MAPPA NUMERO ORDINE": {
                "main": [
                  [
                    {
                      "node": "Execute Workflow",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "INSERT CAMPI RMA": {
                "main": [
                  []
                ]
              },
              "Execute Workflow": {
                "main": [
                  [
                    {
                      "node": "Merge1",
                      "type": "main",
                      "index": 1
                    }
                  ]
                ]
              },
              "Merge1": {
                "main": [
                  [
                    {
                      "node": "numero ordine esiste?",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "numero ordine esiste?": {
                "main": [
                  [
                    {
                      "node": "Validazione ed RMA",
                      "type": "main",
                      "index": 0
                    }
                  ],
                  [
                    {
                      "node": "Form",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "If1": {
                "main": [
                  [
                    {
                      "node": "UPSERT CAMPI RMA",
                      "type": "main",
                      "index": 0
                    }
                  ],
                  [
                    {
                      "node": "Form1",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Validazione ed RMA": {
                "main": [
                  [
                    {
                      "node": "If1",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              }
            },
            "settings": {
              "executionOrder": "v1"
            },
            "staticData": null,
            "meta": {
              "templateCredsSetupCompleted": true
            },
            "pinData": {
              "Form1": [
                {
                  "json": {
                    "Nome e Cognome cliente": "Carlo martino",
                    "Email di conferma ordine": "supplires@tecsolutions.app",
                    "Nr Ordine": "WHQTNRXIZ",
                    "Data ricezione merce": "2025-06-13",
                    "Motivo della restituzione ": "Ho ricevuto merce sbagliata",
                    "Descrizione del problema ": "merce completamente sbagliata",
                    "Foto allegate?": "false",
                    "data inoltro richiesta": "2025-06-22",
                    "testo_estratto": "1. \n\n```\nNANKANG \nWINTER ACTIVA\nN-607+\n215/55 R16\n97V XL\n\nE\nC\n72 dB\n\nC\n\nEU\n```\n\n2.",
                    "descrizione_immagine": "L'immagine mostra un pacco di quattro pneumatici sovrapposti e avvolti in pellicola trasparente da imballaggio. Su uno dei pneumatici è visibile un'etichetta informativa applicata lateralmente, con indicazioni tecniche e classificazioni energetiche. L'etichetta sembra integra e leggibile. I pneumatici appaiono nuovi e non mostrano segni di usura o danni visibili.\n\n---\n\n### Analisi dettagliata:\n\n#### INFORMAZIONI PRODOTTO:\n- **Codice prodotto/SKU:** Non identificato chiaramente nell’etichetta visibile (non compare nessun codice con indicazioni come SKU, CODICE, ART, REF).\n- **Dimensioni pneumatico:** **215/55 R16** (formato standard per pneumatici)\n- **Marca/Brand:** **Nankang**\n- **Modello:** **Winter Activa N-607+**\n- **Numero serie:** Non visibile sull’etichetta mostrata\n- **Data di produzione:** Non indicata sull’etichetta visibile\n\n#### ANALISI PROBLEMI (dalla descrizione dell'imm",
                    "Nome Foto Allegata": "WHQTNRXIZ - Carlo martino - 2025-06-13",
                    "orderFound": true,
                    "order_reference": "WHQTNRXIZ",
                    "order_status": "Consegnato",
                    "order_shipping_number": "1ZR1J1466800230797",
                    "order_payment_method": "PayPal",
                    "order_date_created": "2025-06-09 12:22:57",
                    "order_date_updated": "2025-06-20 21:33:22",
                    "order_total_paid": "€ 211.00",
                    "order_total_products": "€ 161.36",
                    "order_total_products_with_tax": "€ 196.84",
                    "order_products_0_name": "NEXEN N BLUE HD PLUS 155/65 R14 75T",
                    "order_products_0_reference": "981110000163006",
                    "order_products_0_ean": "8807622509902",
                    "order_products_0_quantity": 4,
                    "order_products_0_unit_price": "€ 49.21",
                    "order_products_0_total_price": "€ 196.84",
                    "customer_full_name": "Carlo Martino",
                    "customer_email": "carlo.martino@martino.it",
                    "customer_phone": "0805618333",
                    "customer_is_active": true,
                    "customer_customer_since": "2019-04-30 18:53:35",
                    "delivery_recipient": "Carlo Martino",
                    "delivery_street": "Via Delle Murge 80",
                    "delivery_city": "BARI",
                    "delivery_postcode": "70124",
                    "delivery_country": "Italia",
                    "delivery_phone": "0805618333",
                    "shipment_tracking_number": "1ZR1J1466800230797",
                    "shipment_tracking_url": "https://www.ups.com/track?loc=it_IT&tracknum=1ZR1J1466800230797&requester=WT/trackdetails",
                    "shipment_latest_status": "Consegnato",
                    "shipment_latest_status_date": "2025-06-13T11:04:00+00:00",
                    "shipment_departure_date": "2025-06-11T13:33:00+00:00",
                    "shipment_arrival_date": "2025-06-13T11:04:00+00:00",
                    "shipment_delivery_history_0": "2025-06-13: Consegnato",
                    "shipment_delivery_history_1": "2025-06-13: In consegna oggi",
                    "shipment_delivery_history_2": "2025-06-13: In elaborazione presso la struttura UPS",
                    "shipment_delivery_history_3": "2025-06-12: Partito dal centro",
                    "shipment_delivery_history_4": "2025-06-12: Arrivato al centro",
                    "shipment_delivery_history_5": "2025-06-12: Partito dal centro",
                    "shipment_delivery_history_6": "2025-06-12: Arrivato al centro",
                    "shipment_delivery_history_7": "2025-06-11: Il mittente ha creato un'etichetta, UPS non ha ancora ricevuto il pacco",
                    "Response": "✅ Ordine trovato: WHQTNRXIZ",
                    "shipment_arrival_date_normalizzata": "2025-06-13",
                    "data_inoltro_richiesta_normalizzata": "2025-06-22",
                    "reso richiesto entro 14 giorni": true,
                    "giorni passati": 9
                  }
                }
              ]
            },
            "versionId": "f696720d-965e-4727-823e-a38652a9db49",
            "triggerCount": 1,
            "tags": []
          },
          {
            "createdAt": "2025-06-13T19:13:11.999Z",
            "updatedAt": "2025-06-13T21:41:59.000Z",
            "id": "0BHv8Kqy4TxBfoud",
            "name": "My workflow 4",
            "active": false,
            "isArchived": false,
            "nodes": [
              {
                "parameters": {
                  "triggerTimes": {
                    "item": [
                      {
                        "mode": "custom",
                        "cronExpression": "0 8,21 * * *"
                      }
                    ]
                  }
                },
                "id": "741e8dd8-7e8f-45ef-b2c8-0fe6320e24b3",
                "name": "Schedule",
                "type": "n8n-nodes-base.cron",
                "typeVersion": 1,
                "position": [
                  -940,
                  -140
                ]
              },
              {
                "parameters": {
                  "functionCode": "// 📊 REPORT AGGREGATOR \n// Con metriche complete e task urgenti\n\nconst tasks = $items(\"TASK\").map(i => i.json);\nconst emails = $items(\"MAIL\").map(i => i.json);\n\n// ⏰ DETERMINA PERIODO REPORT\nconst now = new Date();\nconst currentHour = now.getHours();\nconst isEveningReport = currentHour >= 20;\nconst reportType = isEveningReport ? \"Giornata Completa\" : \"Prima Metà Giornata\";\n\n// 📈 CALCOLA METRICHE AVANZATE\nconst metrics = {\n  totalTasks: tasks.length,\n  completedTasks: tasks.filter(t => t.status === 'completed').length,\n  pendingTasks: tasks.filter(t => t.status === 'pending').length,\n  overdueTasks: tasks.filter(t => \n    t.status === 'pending' && t.deadline && new Date(t.deadline) < now\n  ).length,\n  \n  // Per priorità\n  criticalTasks: tasks.filter(t => t.priority === 'critical').length,\n  highTasks: tasks.filter(t => t.priority === 'high').length,\n  mediumTasks: tasks.filter(t => t.priority === 'medium').length,\n  lowTasks: tasks.filter(t => t.priority === 'low').length,\n  \n  // Gap analysis\n  gapsDetected: tasks.filter(t => \n    t.conversation_context?.analysis?.gap_identified\n  ).length,\n  \n  // Clienti unici\n  uniqueCustomers: [...new Set(tasks.map(t => t.customer_email))].filter(Boolean).length,\n  \n  // Email metrics\n  totalEmails: emails.length,\n  emailsWithAI: emails.filter(e => e.ai_response_sent).length\n};\n\n// 🚨 TASK URGENTI (solo critici e high pendenti)\nconst urgentPending = tasks\n  .filter(t => ['critical', 'high'].includes(t.priority) && t.status === 'pending')\n  .sort((a, b) => new Date(a.deadline || '2099-01-01') - new Date(b.deadline || '2099-01-01'))\n  .slice(0, 5)\n  .map(t => ({\n    priority: t.priority,\n    title: (t.title || 'Senza titolo').substring(0, 50) + (t.title?.length > 50 ? '...' : ''),\n    customer: t.customer_email || 'N/A',\n    deadline: t.deadline ? new Date(t.deadline) : null,\n    isOverdue: t.deadline ? new Date(t.deadline) < now : false\n  }));\n\n// 📊 BREAKDOWN PER TIPO AZIONE\nconst actionBreakdown = {};\ntasks.forEach(t => {\n  const action = t.action_type || 'unknown';\n  if (!actionBreakdown[action]) {\n    actionBreakdown[action] = { count: 0, completed: 0 };\n  }\n  actionBreakdown[action].count++;\n  if (t.status === 'completed') {\n    actionBreakdown[action].completed++;\n  }\n});\n\n// Performance rates\nconst completionRate = Math.round(metrics.completedTasks/metrics.totalTasks*100) || 0;\nconst gapRate = Math.round(metrics.gapsDetected/metrics.totalTasks*100) || 0;\n\n// 📱 FORMATO TELEGRAM\nlet telegramText = `📊 **REPORT ${reportType.toUpperCase()}**\\n`;\ntelegramText += `🗓️ ${now.toLocaleDateString('it-IT', { weekday: 'long', day: 'numeric', month: 'long' })}\\n`;\ntelegramText += `⏰ Ore: ${now.toLocaleTimeString('it-IT', {hour: '2-digit', minute:'2-digit'})}\\n\\n`;\n\ntelegramText += `**📈 PANORAMICA**\\n`;\ntelegramText += `• Task Creati: **${metrics.totalTasks}**\\n`;\ntelegramText += `• Completati: ✅ ${metrics.completedTasks} (${completionRate}%)\\n`;\ntelegramText += `• In Attesa: ⏳ ${metrics.pendingTasks}\\n`;\ntelegramText += `• In Ritardo: 🚨 **${metrics.overdueTasks}**\\n\\n`;\n\ntelegramText += `**🎯 PRIORITÀ**\\n`;\ntelegramText += `• 🔴 Critical: ${metrics.criticalTasks}\\n`;\ntelegramText += `• 🟠 High: ${metrics.highTasks}\\n`;\ntelegramText += `• 🟡 Medium: ${metrics.mediumTasks}\\n`;\ntelegramText += `• 🟢 Low: ${metrics.lowTasks}\\n\\n`;\n\ntelegramText += `**📋 PER TIPO AZIONE**\\n`;\nObject.entries(actionBreakdown).forEach(([action, data]) => {\n  telegramText += `• ${action}: ${data.count} (✅ ${data.completed})\\n`;\n});\n\ntelegramText += `\\n**🔍 ANALISI**\\n`;\ntelegramText += `• Gap Rilevati: **${metrics.gapsDetected}** (${gapRate}%)\\n`;\ntelegramText += `• Clienti Gestiti: ${metrics.uniqueCustomers}\\n\\n`;\n\ntelegramText += `**📧 EMAIL**\\n`;\ntelegramText += `• Processate: ${metrics.totalEmails}\\n`;\ntelegramText += `• Con AI: ${metrics.emailsWithAI}\\n`;\n\n// Aggiungi task urgenti se presenti\nif (urgentPending.length > 0) {\n  telegramText += `\\n**🚨 TASK URGENTI APERTI**\\n`;\n  urgentPending.forEach((t, i) => {\n    const icon = t.priority === 'critical' ? '🔴' : '🟠';\n    const overdue = t.isOverdue ? ` ⚠️ SCADUTO` : '';\n    telegramText += `\\n${i+1}. ${icon} ${t.title}\\n`;\n    telegramText += `   👤 ${t.customer}\\n`;\n    if (t.deadline) {\n      telegramText += `   ⏰ ${t.deadline.toLocaleString('it-IT', {day: '2-digit', month: '2-digit', hour: '2-digit', minute: '2-digit'})}${overdue}\\n`;\n    }\n  });\n}\n\ntelegramText += `\\n---\\n`;\ntelegramText += `📊 **Performance**: ${completionRate}% completion | ${gapRate}% gap detection`;\n\n// Return per backward compatibility\nreturn [{\n  json: {\n    report: telegramText,\n    date: now.toLocaleDateString('it-IT'),\n    metrics: metrics\n  }\n}];\n"
                },
                "id": "e01257aa-dc41-42ba-892e-c0bed5b929f5",
                "name": "Aggregate Report",
                "type": "n8n-nodes-base.function",
                "typeVersion": 1,
                "position": [
                  -280,
                  -140
                ]
              },
              {
                "parameters": {
                  "operation": "getAll",
                  "tableId": "smart_tasks",
                  "limit": null,
                  "filters": {
                    "conditions": [
                      {
                        "keyName": "created_at",
                        "condition": "gt",
                        "keyValue": "={{ new Date(Date.now() - 24 * 60 * 60 * 1000).toISOString() }}"
                      }
                    ]
                  }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                  -720,
                  -40
                ],
                "id": "b1891d5a-4de9-40c0-b133-2bb952e9cd16",
                "name": "TASK",
                "alwaysOutputData": true,
                "retryOnFail": true,
                "credentials": {
                  "supabaseApi": {
                    "id": "U18uJwD80Uq036TV",
                    "name": "Supabase tiziano.annicchiarico@gmail.com"
                  }
                }
              },
              {
                "parameters": {
                  "operation": "getAll",
                  "tableId": "email_processing_log",
                  "returnAll": true,
                  "filters": {
                    "conditions": [
                      {
                        "keyName": "created_at",
                        "condition": "gt",
                        "keyValue": "={{ new Date(Date.now() - 5 * 24 * 60 * 60 * 1000).toISOString() }}"
                      }
                    ]
                  }
                },
                "type": "n8n-nodes-base.supabase",
                "typeVersion": 1,
                "position": [
                  -720,
                  -240
                ],
                "id": "6cda2bb1-8b21-4652-9b31-1461c8ab90bb",
                "name": "MAIL",
                "alwaysOutputData": true,
                "retryOnFail": true,
                "credentials": {
                  "supabaseApi": {
                    "id": "U18uJwD80Uq036TV",
                    "name": "Supabase tiziano.annicchiarico@gmail.com"
                  }
                }
              },
              {
                "parameters": {
                  "mode": "combine",
                  "combineBy": "combineByPosition",
                  "options": {}
                },
                "type": "n8n-nodes-base.merge",
                "typeVersion": 3.1,
                "position": [
                  -500,
                  -140
                ],
                "id": "ea937fec-3820-494e-ab87-3c00716c039e",
                "name": "Merge"
              },
              {
                "parameters": {
                  "chatId": "-1002673812914",
                  "text": "={{ $json.report }}",
                  "additionalFields": {
                    "appendAttribution": false,
                    "parse_mode": "Markdown"
                  }
                },
                "id": "249e3544-9c5e-48ae-875a-304fffeec23d",
                "name": "📱 Telegram Report",
                "type": "n8n-nodes-base.telegram",
                "typeVersion": 1.2,
                "position": [
                  -60,
                  -40
                ],
                "webhookId": "bb858f02-80fa-4afa-9527-22c99c3c7b5f",
                "retryOnFail": true,
                "credentials": {
                  "telegramApi": {
                    "id": "dbGXwcFAw4mNHLio",
                    "name": "GommeGoBot"
                  }
                }
              },
              {
                "parameters": {
                  "toRecipients": "supplies@tecsolutions.app",
                  "subject": "={{ '📊 Report ' + (new Date().getHours() >= 20 ? 'Giornata Completa' : 'Prima Metà') + ' - ' + $json.date + ' | ' + $json.metrics.totalTasks + ' task' + ($json.metrics.overdueTasks > 0 ? ', ' + $json.metrics.overdueTasks + ' urgenti' : '') }}",
                  "bodyContent": "={{ $json.report }}",
                  "additionalFields": {
                    "bodyContentType": "html"
                  }
                },
                "type": "n8n-nodes-base.microsoftOutlook",
                "typeVersion": 2,
                "position": [
                  -60,
                  -220
                ],
                "id": "9313ac0c-c13d-4423-808f-95f598025596",
                "name": "Send Report",
                "webhookId": "3a31c1c9-6763-4aa2-9a7a-b1b2f93ccba8",
                "retryOnFail": true,
                "credentials": {
                  "microsoftOutlookOAuth2Api": {
                    "id": "EySZIVRGzocRrEOf",
                    "name": "Outlook Info GommeGo"
                  }
                },
                "onError": "continueRegularOutput"
              },
              {
                "parameters": {
                  "content": "## ⏰ SCHEDULE\n**Orari**: 8:00 e 21:00\n**Cron**: `0 8,21 * * *`\n\n---\n\n## 📥 QUERY DATI\n**TASK**: Ultimi 24 ore\n**MAIL**: Ultimi 5 giorni (per test)\n\n---\n\n## 📈 METRICHE CALCOLATE\n- Task totali/completati/pendenti/in ritardo\n- Distribuzione priorità (🔴🟠🟡🟢)\n- Gap detection rate %\n- Email processate con/senza AI\n- Clienti unici gestiti\n\n---\n\n## 🚨 TASK URGENTI\n**Mostra**: Top 5 critical/high pendenti\n**Info**: Titolo, cliente, deadline\n**Alert**: ⚠️ SCADUTO se oltre deadline\n\n---\n\n## 📤 OUTPUT\n**Telegram**: Chat -1002673812914\n**Email**: tiziano.annicchiarico@tecsolutions.org\n**Subject dinamico**: Include conteggio task e urgenti\n\n---\n\n## 🎯 REPORT TYPE\n**Mattina (8:00)**: \"Prima Metà Giornata\"\n**Sera (21:00)**: \"Giornata Completa\"\n\n---\n\n## 📊 PERFORMANCE\nMostra completion rate % e gap detection rate %",
                  "height": 1280,
                  "width": 580,
                  "color": 4
                },
                "type": "n8n-nodes-base.stickyNote",
                "position": [
                  -1660,
                  -620
                ],
                "typeVersion": 1,
                "id": "1d30e5b1-7acb-45cf-9a1b-748d66d95dec",
                "name": "Sticky Note"
              }
            ],
            "connections": {
              "Schedule": {
                "main": [
                  [
                    {
                      "node": "MAIL",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "TASK",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Aggregate Report": {
                "main": [
                  [
                    {
                      "node": "Send Report",
                      "type": "main",
                      "index": 0
                    },
                    {
                      "node": "📱 Telegram Report",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "TASK": {
                "main": [
                  [
                    {
                      "node": "Merge",
                      "type": "main",
                      "index": 1
                    }
                  ]
                ]
              },
              "MAIL": {
                "main": [
                  [
                    {
                      "node": "Merge",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Merge": {
                "main": [
                  [
                    {
                      "node": "Aggregate Report",
                      "type": "main",
                      "index": 0
                    }
                  ]
                ]
              },
              "Send Report": {
                "main": [
                  [],
                  []
                ]
              }
            },
            "settings": {
              "executionOrder": "v1",
              "callerPolicy": "workflowsFromSameOwner",
              "errorWorkflow": "1LreJWx0H8iEqkgn"
            },
            "staticData": null,
            "meta": null,
            "pinData": {},
            "versionId": "b8e147e8-5a04-4079-ac62-b5c2ccd9d0b8",
            "triggerCount": 1,
            "tags": []
          }
        ],
        "nextCursor": "eyJsaW1pdCI6Miwib2Zmc2V0IjoyfQ=="
      },
      "structure": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "length": 2,
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "value": "2025-06-20T13:50:12.556Z"
                },
                "updatedAt": {
                  "type": "string",
                  "value": "2025-06-28T14:35:35.000Z"
                },
                "id": {
                  "type": "string",
                  "value": "053vrF50XdC1ciOA"
                },
                "name": {
                  "type": "string",
                  "value": "RETURN VALIDATION & INTAKE"
                },
                "active": {
                  "type": "boolean",
                  "value": true
                },
                "isArchived": {
                  "type": "boolean",
                  "value": false
                },
                "nodes": {
                  "type": "array",
                  "length": 32,
                  "items": {
                    "type": "object",
                    "description": "nested object (depth limit)"
                  }
                },
                "connections": {
                  "type": "object",
                  "properties": {
                    "Genera RMA": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Prepara Email": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "On form submission": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Prepara Dati": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Genera RMA1": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Convert to File1": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Estrai Testo": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Validazione File": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Mappa Dati": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Formatta Dati": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Merge": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Google Gemini Chat Model": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Call n8n Workflow Tool": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Supabase": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Carica immagini Merce": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "If": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Mappa nome File": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "MAPPA NUMERO ORDINE": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "INSERT CAMPI RMA": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Execute Workflow": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Merge1": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "numero ordine esiste?": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "If1": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "Validazione ed RMA": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                },
                "settings": {
                  "type": "object",
                  "properties": {
                    "executionOrder": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                },
                "staticData": {
                  "type": "null"
                },
                "meta": {
                  "type": "object",
                  "properties": {
                    "templateCredsSetupCompleted": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                },
                "pinData": {
                  "type": "object",
                  "properties": {
                    "Form1": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                },
                "versionId": {
                  "type": "string",
                  "value": "f696720d-965e-4727-823e-a38652a9db49"
                },
                "triggerCount": {
                  "type": "number",
                  "value": 1
                },
                "tags": {
                  "type": "array",
                  "value": []
                }
              }
            }
          },
          "nextCursor": {
            "type": "string",
            "value": "eyJsaW1pdCI6Miwib2Zmc2V0IjoyfQ=="
          }
        }
      }
    },
    "GET /workflows/{id}": {
      "status": 200,
      "headers": {
        "content-type": "application/json; charset=utf-8",
        "date": "Tue, 12 Aug 2025 12:10:09 GMT",
        "etag": "W/\"ace1-j6T2FBQuz/OZOE71WLa4Koq2ITI\"",
        "strict-transport-security": "max-age=315360000; includeSubDomains; preload",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-xss-protection": "1; mode=block",
        "transfer-encoding": "chunked"
      },
      "data": {
        "createdAt": "2025-06-20T13:50:12.556Z",
        "updatedAt": "2025-06-28T14:35:35.000Z",
        "id": "053vrF50XdC1ciOA",
        "name": "RETURN VALIDATION & INTAKE",
        "active": true,
        "isArchived": false,
        "nodes": [
          {
            "parameters": {
              "jsCode": "// Mappa i dati del form\nconst motivoMap = {\n  'prodotto_errato': 'GOMMEGO',\n  'ordine_sbagliato': 'CLIENTE', \n  'difettoso': 'FORNITORE',\n  'danneggiato': 'CORRIERE'\n};\n\nreturn {\n  numero_ordine: $json['Numero Ordine'],\n  email_cliente: $json['Email Conferma Ordine'],\n  motivo_reso: $json['Motivo del Reso'],\n  responsabilita: motivoMap[$json['Motivo del Reso']],\n  descrizione_problema: $json['Descrizione del Problema']\n};"
            },
            "id": "38eac349-913b-4304-91f6-77e2762aa33e",
            "name": "Prepara Dati",
            "type": "n8n-nodes-base.code",
            "typeVersion": 1,
            "position": [
              -1460,
              -1880
            ]
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "rma",
                    "value": "RMA-2024-{{ Math.floor(Math.random() * 10000) }}"
                  },
                  {
                    "name": "Tipo Reso",
                    "value": "RESO CON ADDEBITO FORNITORE"
                  }
                ]
              },
              "options": {}
            },
            "id": "ae8650ec-95c3-4161-a288-924c07aeb748",
            "name": "Genera RMA",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
              -1240,
              -1620
            ]
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "Email fornitore",
                    "value": "Gentile Fornitore,\n\nRichiesta reso RMA: {{ $json.rma }}\nOrdine: {{ $json.numero_ordine }}\nMotivo: {{ $json.motivo_reso }}\n\nConfermare accettazione."
                  },
                  {
                    "name": "emailCliente",
                    "value": "Gentile Cliente,\n\nConfermiamo ricezione richiesta reso.\nRMA: {{ $json.rma }}\n\nTempo stimato: 7-10 giorni."
                  }
                ]
              },
              "options": {}
            },
            "id": "d067e3cf-54b9-489c-844e-ab43abf17661",
            "name": "Prepara Email",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
              -300,
              -340
            ]
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "message",
                    "value": "Richiesta reso registrata con successo! RMA: {{ $json.rma }}"
                  }
                ]
              },
              "options": {}
            },
            "id": "cf01ed1a-17c0-4932-a1a6-dc6232b0650c",
            "name": "Response",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
              -1460,
              -640
            ]
          },
          {
            "parameters": {
              "formTitle": "FORM RESI  - RESTITUZIONE MERCI",
              "formDescription": "Compila tutti i campi per la restituzione della merce",
              "formFields": {
                "values": [
                  {
                    "fieldLabel": "Nome e Cognome cliente",
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Email di conferma ordine",
                    "fieldType": "email",
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Nr Ordine",
                    "placeholder": "es.  YHHHGBFB",
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Data ricezione merce",
                    "fieldType": "date",
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Motivo della restituzione ",
                    "fieldType": "dropdown",
                    "fieldOptions": {
                      "values": [
                        {
                          "option": "Ho ricevuto merce sbagliata"
                        },
                        {
                          "option": "Ho ordinato merce sbagliata"
                        },
                        {
                          "option": "La merce è arrivata danneggiata "
                        },
                        {
                          "option": "La merce mi è stata consegnata con estremo ritardo"
                        }
                      ]
                    },
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Descrizione del problema ",
                    "fieldType": "textarea",
                    "placeholder": "descrivi brevemente il problema ",
                    "requiredField": true
                  },
                  {
                    "fieldLabel": "Allega una foto della merce ricevuta",
                    "fieldType": "file",
                    "requiredField": true
                  },
                  {
                    "fieldType": "html",
                    "elementName": "Documentazione Obbligatoria!",
                    "html": "<div style=\"background-color: #fef3c7; border: 2px solid #f59e0b; border-radius: 8px; padding: 16px; margin: 16px 0; font-family: Arial, sans-serif;\">\n    <p style=\"margin: 0 0 12px 0; font-weight: bold; color: #EA6B48; font-size: 16px; text-transform: uppercase;\">\n        DOCUMENTAZIONE OBBLIGATORIA\n    </p>\n    \n    <p style=\"margin: 0 0 12px 0; line-height: 1.5; color: #78350f;\">\n        In tutti i casi di reso merce <strong style=\"background-color: #fff; padding: 2px 4px; border-radius: 3px;\">è necessario allegare:\n    </p>\n    \n    <ul style=\"margin: 0 0 12px 0; padding-left: 20px; color: #78350f;\">\n        <li style=\"margin-bottom: 4px;\">Foto dell'imballo esterno che mostri eventuali danni</li>\n        <li>Foto dell'etichetta identificativa della merce ricevuta</li>\n    </ul>\n    \n    <p style=\"margin: 0; font-size: 13px; color: #92400e; font-style: italic;\">\n        La mancanza di documentazione fotografica potrebbe comportare il rifiuto della richiesta.\n    </p>\n</div>"
                  }
                ]
              },
              "responseMode": "lastNode",
              "options": {
                "appendAttribution": false,
                "buttonLabel": "Invia Richiesta",
                "respondWithOptions": {
                  "values": {
                    "formSubmittedText": "La tua richiesta è stata registrata!"
                  }
                },
                "ignoreBots": true
              }
            },
            "type": "n8n-nodes-base.formTrigger",
            "typeVersion": 2.2,
            "position": [
              -1720,
              800
            ],
            "id": "5447d3b9-3d2f-4794-b7db-35fda54e5d97",
            "name": "On form submission",
            "webhookId": "2c77a0da-6beb-48b1-acc8-bc20b702449e"
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "rma",
                    "value": "RMAGG-2025-{{ Math.floor(Math.random() * 10000) }}"
                  },
                  {
                    "name": "stato",
                    "value": "RESO CON ADDEBITO GOMMEGO"
                  }
                ]
              },
              "options": {}
            },
            "id": "c7218c16-b4ae-4714-80e6-474124dc5bf0",
            "name": "Genera RMA1",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
              -1240,
              -1420
            ]
          },
          {
            "parameters": {
              "operation": "toBinary",
              "sourceProperty": "Allega una foto della merce ricevuta (solo se Responsabilità di GommeGo)",
              "options": {}
            },
            "type": "n8n-nodes-base.convertToFile",
            "typeVersion": 1.1,
            "position": [
              -1460,
              -1160
            ],
            "id": "656216f5-6795-491b-bf4d-76e96f0ab39f",
            "name": "Convert to File1"
          },
          {
            "parameters": {
              "inputDataFieldName": "Allega_una_foto_della_merce_ricevuta",
              "name": "={{ $('On form submission').item.json[\"Nr Ordine\"] }} - {{ $json[\"Nome e Cognome cliente\"] }} - {{ $json[\"Data ricezione merce\"] }}",
              "driveId": {
                "__rl": true,
                "value": "My Drive",
                "mode": "list",
                "cachedResultName": "My Drive",
                "cachedResultUrl": "https://drive.google.com/drive/my-drive"
              },
              "folderId": {
                "__rl": true,
                "value": "1PRKTIajj1Qyp74Te2fkwTYe4FlYPbrDv",
                "mode": "list",
                "cachedResultName": "IMMAGINI RESI CLIENTE",
                "cachedResultUrl": "https://drive.google.com/drive/folders/1PRKTIajj1Qyp74Te2fkwTYe4FlYPbrDv"
              },
              "options": {}
            },
            "type": "n8n-nodes-base.googleDrive",
            "typeVersion": 3,
            "position": [
              -1500,
              1000
            ],
            "id": "7526b0d0-5110-4f97-90b1-197d969201d3",
            "name": "Carica immagini Merce",
            "credentials": {
              "googleDriveOAuth2Api": {
                "id": "WBhAeqmWykJUM02S",
                "name": "Google Drive account"
              }
            }
          },
          {
            "parameters": {
              "resource": "image",
              "operation": "analyze",
              "modelId": {
                "__rl": true,
                "value": "chatgpt-4o-latest",
                "mode": "list",
                "cachedResultName": "CHATGPT-4O-LATEST"
              },
              "text": "Analizza il testo estratto dall'immagine e la descrizione dell'immagine per identificare informazioni sul prodotto e problemi del reso.\n\nIMPORTANTE: Dividi SEMPRE il tuo output in due sezioni ben distinte:\n1. **Testo estratto (in italiano):** [qui riporta TUTTO il testo OCR trovato nell'immagine]\n2. **Descrizione dell'immagine:** [qui descrivi cosa vedi nell'immagine]\n\nDal testo estratto, identifica le seguenti informazioni se presenti:\n\nINFORMAZIONI PRODOTTO:\n- Codice prodotto/SKU: cerca pattern come SKU, COD, CODE, CODICE, ART, REF seguiti da codici alfanumerici\n- Dimensioni pneumatico: cerca pattern come 225/45R17, 205/55 R16, ecc.\n- Marca/Brand: cerca parole come MARCA, BRAND, MARCHIO\n- Modello: cerca MODEL, MODELLO\n- Numero serie: cerca S/N, SERIAL, SERIE\n- Data produzione: cerca PROD, MFG, PRODUZIONE seguiti da date\n\nANALISI PROBLEMI (dalla descrizione dell'immagine):\n- Danno visibile: cerca riferimenti a danni, rotture, difetti, crepe, graffi, ammaccature\n- Prodotto errato: cerca indicazioni di prodotto diverso, errato, sbagliato, non corrisponde\n- Problema imballo: cerca riferimenti a imballo, scatola, confezione, pacco, busta\n- Componenti mancanti: cerca indicazioni di mancanza, assenza, incompleto\n- Problema qualità: cerca riferimenti a qualità, difetto, malfunzionamento\n\nFornisci un'analisi dettagliata identificando:\n1. Tipo di prodotto visibile\n2. Eventuali codici o etichette leggibili\n3. Problemi visibili che giustificano il reso\n4. Stato dell'imballo\n5. Corrispondenza con quanto ordinato (se deducibile)\n\nSii specifico e descrittivo nell'analisi dell'immagine per supportare la richiesta di reso.",
              "inputType": "base64",
              "binaryPropertyName": "Allega_una_foto_della_merce_ricevuta",
              "options": {}
            },
            "type": "@n8n/n8n-nodes-langchain.openAi",
            "typeVersion": 1.8,
            "position": [
              -1500,
              800
            ],
            "id": "2d12910e-de5c-4e25-98ac-44c3dc2d99e7",
            "name": "Estrai Testo",
            "alwaysOutputData": true,
            "credentials": {
              "openAiApi": {
                "id": "PWlkktuNL3ZIywBy",
                "name": "OpenAi account"
              }
            }
          },
          {
            "parameters": {
              "jsCode": "try {\n  // Ottieni i dati JSON del form\n  const formData = $input.first().json;\n  \n  // Il campo del file dal form\n  const fileField = formData[\"Carica il tuo documento (Carta d'identità o Patente)\"];\n  \n  if (!fileField || !Array.isArray(fileField) || fileField.length === 0) {\n    throw new Error('Nessun file caricato nel form');\n  }\n  \n  // Prendi il primo file\n  const fileInfo = fileField[0];\n  \n  // IMPORTANTE: n8n converte i nomi dei campi binari sostituendo caratteri speciali\n  // Il nome reale del campo binario è quello che vediamo nel debug\n  const binaryPropertyName = \"Carica_il_tuo_documento__Carta_d_identit__o_Patente_\";\n  \n  // Accedi ai dati binari\n  const binaryData = $input.first().binary;\n  \n  if (!binaryData || !binaryData[binaryPropertyName]) {\n    throw new Error(`Dati binari non trovati con chiave: ${binaryPropertyName}`);\n  }\n  \n  // Ottieni i dati binari specifici\n  const fileBinaryData = binaryData[binaryPropertyName];\n  \n  // Estrai informazioni\n  const fileName = fileInfo.filename;\n  const mimeType = fileInfo.mimetype;\n  const fileSize = fileInfo.size;\n  \n  // Inizializza i controlli di qualità\n  const qualityChecks = {\n    fileSize: { passed: false, message: '' },\n    fileType: { passed: false, message: '' },\n    imageQuality: { passed: false, message: '' }\n  };\n  \n  // 1. CONTROLLO DIMENSIONE FILE (max 10MB)\n  const maxSize = 10 * 1024 * 1024; // 10MB\n  const minSize = 50 * 1024; // 50KB\n  \n  if (fileSize > maxSize) {\n    qualityChecks.fileSize.passed = false;\n    qualityChecks.fileSize.message = `File troppo grande: ${(fileSize/1024/1024).toFixed(2)}MB (max 10MB)`;\n  } else if (fileSize < minSize) {\n    qualityChecks.fileSize.passed = false;\n    qualityChecks.fileSize.message = `File troppo piccolo: ${(fileSize/1024).toFixed(0)}KB (min 50KB)`;\n  } else {\n    qualityChecks.fileSize.passed = true;\n    qualityChecks.fileSize.message = `Dimensione OK: ${(fileSize/1024/1024).toFixed(2)}MB`;\n  }\n  \n  // 2. CONTROLLO TIPO FILE\n  const allowedTypes = ['image/jpeg', 'image/jpg', 'image/png', 'application/pdf'];\n  if (allowedTypes.includes(mimeType)) {\n    qualityChecks.fileType.passed = true;\n    qualityChecks.fileType.message = `Formato supportato: ${mimeType}`;\n  } else {\n    qualityChecks.fileType.passed = false;\n    qualityChecks.fileType.message = `Formato non supportato: ${mimeType}`;\n  }\n  \n  // 3. ANALISI QUALITÀ IMMAGINE\n  if (mimeType.startsWith('image/')) {\n    const estimatedQuality = fileSize / 1024; // KB\n    \n    if (estimatedQuality < 100) {\n      qualityChecks.imageQuality.passed = false;\n      qualityChecks.imageQuality.message = 'Qualità insufficiente - immagine troppo compressa';\n    } else if (estimatedQuality < 200) {\n      qualityChecks.imageQuality.passed = true;\n      qualityChecks.imageQuality.message = 'Qualità accettabile ma non ottimale';\n    } else {\n      qualityChecks.imageQuality.passed = true;\n      qualityChecks.imageQuality.message = 'Qualità ottima per OCR';\n    }\n  } else if (mimeType === 'application/pdf') {\n    qualityChecks.imageQuality.passed = true;\n    qualityChecks.imageQuality.message = 'PDF - qualità non verificabile';\n  }\n  \n  // VALUTAZIONE FINALE\n  const allPassed = Object.values(qualityChecks).every(check => check.passed);\n  const validationStatus = allPassed ? 'PASSED' : 'REJECTED';\n  \n  // Calcola quality score\n  let qualityScore = 0;\n  if (qualityChecks.fileSize.passed) qualityScore += 33;\n  if (qualityChecks.fileType.passed) qualityScore += 33;\n  if (qualityChecks.imageQuality.passed) qualityScore += 34;\n  \n  // Prepara l'output\n  const result = {\n    json: {\n      validationStatus: validationStatus,\n      passed: allPassed,\n      fileName: fileName,\n      mimeType: mimeType,\n      fileSize: fileSize,\n      fileSizeReadable: `${(fileSize/1024/1024).toFixed(2)}MB`,\n      qualityChecks: qualityChecks,\n      qualityScore: qualityScore,\n      userMessage: allPassed ? \n        '✅ Documento valido e pronto per elaborazione OCR' : \n        '❌ Documento non supera i controlli di qualità',\n      validatedAt: new Date().toISOString()\n    }\n  };\n  \n  // Se PASSED, passa i dati binari con il nome corretto\n  if (allPassed) {\n    result.binary = {\n      data: fileBinaryData  // Usa l'oggetto binary del file\n    };\n  }\n  \n  return result;\n  \n} catch (error) {\n  return {\n    json: {\n      validationStatus: 'REJECTED',\n      passed: false,\n      error: error.message,\n      userMessage: `❌ Errore validazione: ${error.message}`,\n      validatedAt: new Date().toISOString()\n    }\n  };\n}"
            },
            "id": "573b36a3-eeed-4441-a3e3-35c1299a8386",
            "name": "Validazione File",
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
              -1460,
              -900
            ],
            "notes": "Valida il file caricato: controlla formato, dimensione e prepara per upload. Converte da base64 a binary."
          },
          {
            "parameters": {
              "jsCode": "const raw = $input.first().json.content;\nif (!raw) throw new Error('Nessun testo OCR rilevato');\n\n// Dividi il content in due parti\nconst parts = raw.split('**Descrizione dell\\'immagine:**');\nconst testoEstratto = parts[0] ? parts[0].replace(/\\*\\*Testo estratto \\(in italiano\\):\\*\\*/, '').trim() : '';\nconst descrizioneImmagine = parts[1] ? parts[1].trim() : '';\n\n// Output semplice con solo le due parti divise\nconst output = {\n  testo_estratto: testoEstratto,\n  descrizione_immagine: descrizioneImmagine\n};\n\nreturn [{ json: output }];"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
              -1280,
              800
            ],
            "id": "615e7911-cc0c-45dc-8075-233b8355f466",
            "name": "Formatta Dati",
            "alwaysOutputData": true
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "f74c1e5b-5838-4281-89a2-dfcc04062d6a",
                    "name": "Nome e Cognome cliente",
                    "value": "={{ $json[\"Nome e Cognome cliente\"] }}",
                    "type": "string"
                  },
                  {
                    "id": "04c68c45-ed7a-4356-8820-8653bcaa7b9b",
                    "name": "Email di conferma ordine",
                    "value": "={{ $json[\"Email di conferma ordine\"] }}",
                    "type": "string"
                  },
                  {
                    "id": "e0bc77a9-c169-4978-975b-6ad313932e32",
                    "name": "Nr Ordine",
                    "value": "={{ $json[\"Nr Ordine\"] }}",
                    "type": "string"
                  },
                  {
                    "id": "6482f6e5-91d1-4d54-b33b-04dfcda273c0",
                    "name": "Data ricezione merce",
                    "value": "={{ $json[\"Data ricezione merce\"] }}",
                    "type": "string"
                  },
                  {
                    "id": "4a6b92f0-3d8c-4aae-9d62-f165608aa26e",
                    "name": "Motivo della restituzione ",
                    "value": "={{ $json[\"Motivo della restituzione \"] }}",
                    "type": "string"
                  },
                  {
                    "id": "2d845429-6d32-4d37-9e75-92de5ff54e8e",
                    "name": "Descrizione del problema ",
                    "value": "={{ $json[\"Descrizione del problema \"] }}",
                    "type": "string"
                  },
                  {
                    "id": "2293d184-239a-4047-8ee1-a6071b6669f4",
                    "name": "=Foto allegate?",
                    "value": "={{ $json[\"Allega una foto della merce ricevuta (solo se Responsabilità di GommeGo)\"] ? true : false }}",
                    "type": "string"
                  },
                  {
                    "id": "bcfd8dcd-6b63-4a9a-acfc-f4f23aa9174e",
                    "name": "data inoltro richiesta",
                    "value": "={{ new Date($json[\"submittedAt\"]).toISOString().slice(0, 10) }}",
                    "type": "string"
                  }
                ]
              },
              "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
              -1500,
              620
            ],
            "id": "9a4be39a-2d56-4216-a87d-8d01b4c92064",
            "name": "Mappa Dati",
            "alwaysOutputData": true
          },
          {
            "parameters": {
              "mode": "combine",
              "combineBy": "combineByPosition",
              "numberInputs": 3,
              "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
              -1000,
              800
            ],
            "id": "1c221a12-42b0-4a26-ac31-88d8a82f7259",
            "name": "Merge"
          },
          {
            "parameters": {
              "modelName": "models/gemini-1.5-flash-latest",
              "options": {}
            },
            "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
            "typeVersion": 1,
            "position": [
              -760,
              660
            ],
            "id": "7573708d-d1e4-4cc4-9ca4-751fdc0227fc",
            "name": "Google Gemini Chat Model",
            "credentials": {
              "googlePalmApi": {
                "id": "owVOESxC0E1TNLDF",
                "name": "Google Gemini(PaLM) GommeGo"
              }
            }
          },
          {
            "parameters": {
              "workflowId": {
                "__rl": true,
                "value": "dQ0r6zTsY02PDG8X",
                "mode": "list",
                "cachedResultName": "SUB_API_INFO_ORDER & PARCELSAPP"
              },
              "workflowInputs": {
                "mappingMode": "defineBelow",
                "value": {},
                "matchingColumns": [],
                "schema": [],
                "attemptToConvertTypes": false,
                "convertFieldsToString": false
              }
            },
            "type": "@n8n/n8n-nodes-langchain.toolWorkflow",
            "typeVersion": 2.2,
            "position": [
              -640,
              660
            ],
            "id": "fd69801c-14d6-4e42-847e-4e7447d9ef31",
            "name": "Call n8n Workflow Tool"
          },
          {
            "parameters": {
              "descriptionType": "manual",
              "toolDescription": "Da questo tool devi prendere il campo ",
              "operation": "get",
              "tableId": "orders_processed"
            },
            "type": "n8n-nodes-base.supabaseTool",
            "typeVersion": 1,
            "position": [
              -520,
              660
            ],
            "id": "7ac4e5fe-625d-4b24-88d8-3c6912da57fe",
            "name": "Supabase",
            "credentials": {
              "supabaseApi": {
                "id": "BkVV9D4yOfHR3iC4",
                "name": "Supabase tecsolutions"
              }
            }
          },
          {
            "parameters": {
              "promptType": "define",
              "text": "=",
              "options": {
                "systemMessage": ""
              }
            },
            "id": "fd30b17b-fe8b-4dff-bad0-8c49dcf20b36",
            "name": "VALIDAZIONE E INTAKE",
            "type": "@n8n/n8n-nodes-langchain.agent",
            "typeVersion": 1.7,
            "position": [
              -720,
              440
            ],
            "notesInFlow": true,
            "notes": "🔹 Agente AI per diagnosi embedding"
          },
          {
            "parameters": {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "ea0dc5bb-61a5-4a42-adab-6e6593f92088",
                    "leftValue": "={{ $json[\"Motivo della restituzione \"] }}",
                    "rightValue": "(Responsabilità di GommeGo)",
                    "operator": {
                      "type": "string",
                      "operation": "contains"
                    }
                  }
                ],
                "combinator": "and"
              },
              "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
              -1460,
              -1520
            ],
            "id": "53c07006-4a08-4875-a701-ace9ecf5287c",
            "name": "If"
          },
          {
            "parameters": {
              "content": "## Mappatura dati e foto\n\n1) estrazione dei dati del form\n2 )Analisi della foto allegata con estrazione testo e descrizione\n\n3) Salvataggio foto con nuova nome",
              "height": 660,
              "width": 580,
              "color": 7
            },
            "type": "n8n-nodes-base.stickyNote",
            "position": [
              -1700,
              -1400
            ],
            "typeVersion": 1,
            "id": "65843ec0-ba6f-4a1a-8d63-9bd62ed3a21a",
            "name": "Sticky Note"
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "e44032c9-0758-4119-8022-000f536bcf2e",
                    "name": "Nome Foto Allegata",
                    "value": "={{ $json.name }}",
                    "type": "string"
                  }
                ]
              },
              "options": {
                "ignoreConversionErrors": false
              }
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
              -1280,
              1000
            ],
            "id": "f107f741-3385-4e54-8ed9-5cd022d774ed",
            "name": "Mappa nome File",
            "alwaysOutputData": true
          },
          {
            "parameters": {
              "workflowId": {
                "__rl": true,
                "value": "ZSnrpT2XPhUmFAVE",
                "mode": "list",
                "cachedResultName": "SUB_RETURN_INFO_ORDER & PARCELSAPP"
              },
              "workflowInputs": {
                "mappingMode": "defineBelow",
                "value": {},
                "matchingColumns": [],
                "schema": [],
                "attemptToConvertTypes": false,
                "convertFieldsToString": true
              },
              "options": {}
            },
            "type": "n8n-nodes-base.executeWorkflow",
            "typeVersion": 1.2,
            "position": [
              -580,
              920
            ],
            "id": "542a801d-dd7d-47b1-a2fc-22310963c220",
            "name": "Execute Workflow"
          },
          {
            "parameters": {
              "assignments": {
                "assignments": [
                  {
                    "id": "9f9d467c-4eb4-404c-82a6-027c6c997fc7",
                    "name": "query",
                    "value": "={{ $json[\"Nr Ordine\"] }}",
                    "type": "string"
                  }
                ]
              },
              "options": {}
            },
            "type": "n8n-nodes-base.set",
            "typeVersion": 3.4,
            "position": [
              -800,
              920
            ],
            "id": "aeb3ac24-840a-4623-b9a5-4bf04f1a9d62",
            "name": "MAPPA NUMERO ORDINE"
          },
          {
            "parameters": {
              "tableId": "return_orders",
              "fieldsUi": {
                "fieldValues": [
                  {
                    "fieldId": "order_found",
                    "fieldValue": "={{ $json.orderFound }}"
                  },
                  {
                    "fieldId": "rma_id"
                  },
                  {
                    "fieldId": "customer_full_name",
                    "fieldValue": "={{ $json[\"Nome e Cognome cliente\"] }}"
                  },
                  {
                    "fieldId": "customer_email",
                    "fieldValue": "={{ $json[\"Email di conferma ordine\"] }}"
                  },
                  {
                    "fieldId": "order_reference",
                    "fieldValue": "={{ $json[\"Nr Ordine\"] }}"
                  },
                  {
                    "fieldId": "data_ricezione_merce",
                    "fieldValue": "={{ $json[\"Data ricezione merce\"] }}"
                  },
                  {
                    "fieldId": "data_inoltro_richiesta",
                    "fieldValue": "={{ $json[\"data inoltro richiesta\"] }}"
                  },
                  {
                    "fieldId": "motivo_restituzione",
                    "fieldValue": "={{ $json[\"Motivo della restituzione \"] }}"
                  },
                  {
                    "fieldId": "descrizione_problema",
                    "fieldValue": "={{ $json[\"Descrizione del problema \"] }}"
                  },
                  {
                    "fieldId": "foto_allegate",
                    "fieldValue": "={{ $json[\"Foto allegate?\"] }}"
                  },
                  {
                    "fieldId": "nome_foto_allegata",
                    "fieldValue": "={{ $json[\"Nome Foto Allegata\"] }}"
                  },
                  {
                    "fieldId": "testo_estratto",
                    "fieldValue": "={{ $json.testo_estratto }}"
                  },
                  {
                    "fieldId": "descrizione_immagine",
                    "fieldValue": "={{ $json.descrizione_immagine }}"
                  },
                  {
                    "fieldId": "order_products_0_name",
                    "fieldValue": "={{ $json.order_products_0_name }}"
                  },
                  {
                    "fieldId": "order_products_0_reference",
                    "fieldValue": "={{ $json.order_products_0_reference }}"
                  },
                  {
                    "fieldId": "order_products_0_ean",
                    "fieldValue": "={{ $json.order_products_0_ean }}"
                  },
                  {
                    "fieldId": "order_products_0_quantity",
                    "fieldValue": "={{ $json.order_products_0_quantity }}"
                  },
                  {
                    "fieldId": "order_products_0_unit_price",
                    "fieldValue": "={{ $json.order_products_0_unit_price }}"
                  },
                  {
                    "fieldId": "order_products_0_total_price",
                    "fieldValue": "={{ $json.order_products_0_total_price }}"
                  },
                  {
                    "fieldId": "order_products_1_name",
                    "fieldValue": "={{ $json.customer_email }}"
                  },
                  {
                    "fieldId": "order_products_1_reference",
                    "fieldValue": "={{ $json[\"order_products_1_reference\"] || null }}"
                  },
                  {
                    "fieldId": "order_products_1_ean",
                    "fieldValue": "={{ $json[\"order_products_1_ean\"] || null }}"
                  },
                  {
                    "fieldId": "order_products_1_quantity",
                    "fieldValue": "={{ $json[\"order_products_1_quantity\"] ?? null }}"
                  },
                  {
                    "fieldId": "order_products_1_unit_price",
                    "fieldValue": "={{ $json[\"order_products_1_unit_price\"] || null }}"
                  },
                  {
                    "fieldId": "order_products_1_total_price",
                    "fieldValue": "={{ $json[\"order_products_1_total_price\"] || null }}"
                  },
                  {
                    "fieldId": "shipment_arrival_date",
                    "fieldValue": "={{ $json.shipment_arrival_date }}"
                  },
                  {
                    "fieldId": "shipment_tracking_number",
                    "fieldValue": "={{ $json.shipment_tracking_number }}"
                  },
                  {
                    "fieldId": "shipment_tracking_url",
                    "fieldValue": "={{ $json.shipment_tracking_url }}"
                  },
                  {
                    "fieldId": "reso_autorizzato",
                    "fieldValue": "={{ $json[\"reso richiesto entro 14 giorni\"] }}"
                  },
                  {
                    "fieldId": "giorni_trascorsi",
                    "fieldValue": "={{ $json[\"giorni passati\"] }}"
                  }
                ]
              }
            },
            "type": "n8n-nodes-base.supabase",
            "typeVersion": 1,
            "position": [
              260,
              420
            ],
            "id": "1afa0ba6-398e-4319-8787-227e3c2001a6",
            "name": "INSERT CAMPI RMA",
            "credentials": {
              "supabaseApi": {
                "id": "BkVV9D4yOfHR3iC4",
                "name": "Supabase tecsolutions"
              }
            }
          },
          {
            "parameters": {
              "tableId": "return_orders",
              "fieldsUi": {
                "fieldValues": [
                  {
                    "fieldId": "order_status",
                    "fieldValue": "={{ $json.order_status }}"
                  },
                  {
                    "fieldId": "order_total_paid",
                    "fieldValue": "={{ $json.order_total_paid }}"
                  },
                  {
                    "fieldId": "order_total_products",
                    "fieldValue": "={{ $json.order_total_products }}"
                  },
                  {
                    "fieldId": "order_total_products_with_tax",
                    "fieldValue": "={{ $json.order_total_products_with_tax }}"
                  },
                  {
                    "fieldId": "order_products_0_name",
                    "fieldValue": "={{ $json.order_products_0_name }}"
                  },
                  {
                    "fieldId": "order_products_0_reference",
                    "fieldValue": "={{ $json.order_products_0_reference }}"
                  },
                  {
                    "fieldId": "order_products_0_ean",
                    "fieldValue": "={{ $json.order_products_0_ean }}"
                  },
                  {
                    "fieldId": "order_products_0_quantity",
                    "fieldValue": "={{ $json.order_products_0_quantity }}"
                  },
                  {
                    "fieldId": "order_products_0_unit_price",
                    "fieldValue": "={{ $json.order_products_0_unit_price }}"
                  },
                  {
                    "fieldId": "order_products_0_total_price",
                    "fieldValue": "={{ $json.order_products_0_total_price }}"
                  },
                  {
                    "fieldId": "order_products_1_name",
                    "fieldValue": "={{ $json.order_products_1_name }}"
                  },
                  {
                    "fieldId": "order_products_1_reference",
                    "fieldValue": "={{ $json.order_products_1_reference }}"
                  },
                  {
                    "fieldId": "order_products_1_ean",
                    "fieldValue": "={{ $json.order_products_1_ean }}"
                  },
                  {
                    "fieldId": "order_products_1_quantity",
                    "fieldValue": "={{ $json.order_products_1_quantity }}"
                  },
                  {
                    "fieldId": "order_products_1_unit_price",
                    "fieldValue": "={{ $json.order_products_1_unit_price }}"
                  },
                  {
                    "fieldId": "order_products_1_total_price",
                    "fieldValue": "={{ $json.order_products_1_total_price }}"
                  },
                  {
                    "fieldId": "customer_full_name",
                    "fieldValue": "={{ $json.customer_full_name }}"
                  },
                  {
                    "fieldId": "customer_email",
                    "fieldValue": "={{ $json.customer_email }}"
                  },
                  {
                    "fieldId": "customer_phone",
                    "fieldValue": "={{ $json.customer_phone }}"
                  },
                  {
                    "fieldId": "delivery_recipient",
                    "fieldValue": "={{ $json.delivery_recipient }}"
                  },
                  {
                    "fieldId": "delivery_street",
                    "fieldValue": "={{ $json.delivery_street }}"
                  },
                  {
                    "fieldId": "delivery_postcode",
                    "fieldValue": "={{ $json.delivery_postcode }}"
                  },
                  {
                    "fieldId": "delivery_country",
                    "fieldValue": "={{ $json.delivery_country }}"
                  },
                  {
                    "fieldId": "delivery_phone",
                    "fieldValue": "={{ $json.delivery_phone }}"
                  },
                  {
                    "fieldId": "delivery_fiscal_code",
                    "fieldValue": "={{ $json.delivery_fiscal_code }}"
                  },
                  {
                    "fieldId": "shipment_tracking_url",
                    "fieldValue": "={{ $json.shipment_tracking_url }}"
                  },
                  {
                    "fieldId": "shipment_latest_status",
                    "fieldValue": "={{ $json.shipment_latest_status }}"
                  },
                  {
                    "fieldId": "shipment_latest_status_date",
                    "fieldValue": "={{ $json.shipment_latest_status_date }}"
                  },
                  {
                    "fieldId": "shipment_departure_date",
                    "fieldValue": "={{ $json.shipment_departure_date }}"
                  },
                  {
                    "fieldId": "shipment_transit_days",
                    "fieldValue": "={{ $json.shipment_transit_days ? $json.shipment_transit_days : null }}"
                  },
                  {
                    "fieldId": "response",
                    "fieldValue": "={{ $json.Response }}"
                  },
                  {
                    "fieldId": "delivery_city",
                    "fieldValue": "={{ $json.delivery_city }}"
                  },
                  {
                    "fieldId": "order_reference",
                    "fieldValue": "={{ $json.order_reference }}"
                  },
                  {
                    "fieldId": "order_found",
                    "fieldValue": "={{ $json.orderFound }}"
                  }
                ]
              }
            },
            "type": "n8n-nodes-base.supabase",
            "typeVersion": 1,
            "position": [
              60,
              -300
            ],
            "id": "2593691e-4c3a-4749-a8f3-3e2b46ddc9d9",
            "name": "Supabase1",
            "credentials": {
              "supabaseApi": {
                "id": "BkVV9D4yOfHR3iC4",
                "name": "Supabase tecsolutions"
              }
            }
          },
          {
            "parameters": {
              "mode": "combine",
              "combineBy": "combineByPosition",
              "options": {}
            },
            "type": "n8n-nodes-base.merge",
            "typeVersion": 3.2,
            "position": [
              -380,
              820
            ],
            "id": "1574316b-79f2-462b-a0ea-e23dad70dae1",
            "name": "Merge1"
          },
          {
            "parameters": {
              "values": {
                "string": [
                  {
                    "name": "Email fornitore",
                    "value": "Gentile Fornitore,\n\nRichiesta reso RMA: {{ $json.rma }}\nOrdine: {{ $json.numero_ordine }}\nMotivo: {{ $json.motivo_reso }}\n\nConfermare accettazione."
                  },
                  {
                    "name": "emailCliente",
                    "value": "Gentile Cliente,\n\nConfermiamo ricezione richiesta reso.\nRMA: {{ $json.rma }}\n\nTempo stimato: 7-10 giorni."
                  }
                ]
              },
              "options": {}
            },
            "id": "3930d1c9-37bd-46c8-842d-a3c52933cee7",
            "name": "Prepara Email1",
            "type": "n8n-nodes-base.set",
            "typeVersion": 1,
            "position": [
              -740,
              -400
            ]
          },
          {
            "parameters": {
              "operation": "completion",
              "completionTitle": "La sua richiesta non può essere accettata ",
              "completionMessage": "=Gentile {{ $json[\"Nome e Cognome cliente\"] }},\n\nil numero d’ordine \"{{ $json[\"Nr Ordine\"] }}\" non risulta presente nei nostri sistemi.  \nÈ possibile che si tratti di un errore di digitazione.\n\nLa invitiamo cortesemente a VERIFICARE IL NUMERO e riprovare l’invio del modulo.\n\nCordiali saluti,  \nIl Team di GommeGo\n\n\n",
              "options": {}
            },
            "type": "n8n-nodes-base.form",
            "typeVersion": 1,
            "position": [
              -20,
              1180
            ],
            "id": "33c9d919-0e79-4adf-ad33-7d16628b9001",
            "name": "Form",
            "webhookId": "519b8f23-e21c-430e-a1ee-45e8570596f8"
          },
          {
            "parameters": {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "94837f50-81d1-458b-a3aa-2b02d7edaf79",
                    "leftValue": "={{ $json.orderFound }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "or"
              },
              "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
              -220,
              820
            ],
            "id": "91f776f9-9656-4669-aedd-6e99e472a56c",
            "name": "numero ordine esiste?"
          },
          {
            "parameters": {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "d0279021-41d8-4165-a97a-0cb79b83ac1b",
                    "leftValue": "={{ $json[\"reso richiesto entro 14 giorni\"] }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "options": {}
            },
            "type": "n8n-nodes-base.if",
            "typeVersion": 2.2,
            "position": [
              140,
              800
            ],
            "id": "a7eccebc-62d1-4983-be2b-a13a89ef54a4",
            "name": "If1"
          },
          {
            "parameters": {
              "operation": "completion",
              "completionTitle": "La sua richiesta non può essere accettata ",
              "completionMessage": "=Gentile {{ $json[\"Nome e Cognome cliente\"] }},\nSiamo Spiacenti ma il suo ordine \"{{ $json[\"Nr Ordine\"] }}\" non è rimborsabile in quanto dalla data della sua richiesta avvenuta il {{ $json[\"data inoltro richiesta\"] }} sono passati {{ $json[\"giorni passati\"] }} giorni, quindi oltre il limite stabilito dalla nostre politiche di reso accettate al momento dell'ordine.\n\nRestiamo a sua completa disposizione \n\nCordiali saluti,  \nIl Team di GommeGo\n\n\n",
              "options": {}
            },
            "type": "n8n-nodes-base.form",
            "typeVersion": 1,
            "position": [
              380,
              900
            ],
            "id": "d04eb0a1-6106-403f-9b2d-5562317cfdc5",
            "name": "Form1",
            "webhookId": "519b8f23-e21c-430e-a1ee-45e8570596f8"
          },
          {
            "parameters": {
              "jsCode": "const input = items[0].json;\n\nconst dataConsegnaRaw = input[\"shipment_arrival_date\"];\nconst dataRichiestaRaw = input[\"data inoltro richiesta\"];\n\n// Funzione per generare codice richiesta alfanumerico\nfunction generaCodiceRichiesta(length = 10) {\n  const charset = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789';\n  let codice = '';\n  for (let i = 0; i < length; i++) {\n    const randomIndex = Math.floor(Math.random() * charset.length);\n    codice += charset[randomIndex];\n  }\n  return codice;\n}\n\nif (!dataConsegnaRaw || !dataRichiestaRaw) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Dati mancanti\",\n      \"reso richiesto entro 14 giorni\": null,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n}\n\ntry {\n  // Normalizza entrambe le date in formato YYYY-MM-DD\n  const dataConsegna = new Date(dataConsegnaRaw);\n  const dataRichiesta = new Date(dataRichiestaRaw);\n\n  const giornoConsegnaStr = dataConsegna.toISOString().slice(0, 10);\n  const giornoRichiestaStr = dataRichiesta.toISOString().slice(0, 10);\n\n  const giornoConsegna = new Date(giornoConsegnaStr);\n  const giornoRichiesta = new Date(giornoRichiestaStr);\n\n  const diffInMs = giornoRichiesta - giornoConsegna;\n  const diffInGiorni = diffInMs / (1000 * 60 * 60 * 24);\n  const entro14 = diffInGiorni >= 0 && diffInGiorni <= 14;\n\n  return [{\n    json: {\n      ...input,\n      \"shipment_arrival_date_normalizzata\": giornoConsegnaStr,\n      \"data_inoltro_richiesta_normalizzata\": giornoRichiestaStr,\n      \"reso richiesto entro 14 giorni\": entro14,\n      \"giorni passati\": diffInGiorni,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n} catch (error) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Errore nel parsing delle date\",\n      \"dettaglio\": error.message,\n      \"codice_richiesta\": generaCodiceRichiesta()\n    }\n  }];\n}\n"
            },
            "type": "n8n-nodes-base.code",
            "typeVersion": 2,
            "position": [
              -20,
              800
            ],
            "id": "a2350439-41fc-432f-858e-44cccea9bf52",
            "name": "Validazione ed RMA",
            "notes": "const input = items[0].json;\n\nconst dataConsegnaRaw = input[\"shipment_arrival_date\"];\nconst dataRichiestaRaw = input[\"data inoltro richiesta\"];\n\nif (!dataConsegnaRaw || !dataRichiestaRaw) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Dati mancanti\",\n      \"reso richiesto entro 14 giorni\": null\n    }\n  }];\n}\n\ntry {\n  // Normalizza entrambe le date in formato YYYY-MM-DD\n  const dataConsegna = new Date(dataConsegnaRaw);\n  const dataRichiesta = new Date(dataRichiestaRaw);\n\n  const giornoConsegnaStr = dataConsegna.toISOString().slice(0, 10);\n  const giornoRichiestaStr = dataRichiesta.toISOString().slice(0, 10);\n\n  const giornoConsegna = new Date(giornoConsegnaStr);\n  const giornoRichiesta = new Date(giornoRichiestaStr);\n\n  const diffInMs = giornoRichiesta - giornoConsegna;\n  const diffInGiorni = diffInMs / (1000 * 60 * 60 * 24);\n  const entro14 = diffInGiorni >= 0 && diffInGiorni <= 14;\n\n  return [{\n    json: {\n      ...input,\n      \"shipment_arrival_date_normalizzata\": giornoConsegnaStr,\n      \"data_inoltro_richiesta_normalizzata\": giornoRichiestaStr,\n      \"reso richiesto entro 14 giorni\": entro14,\n      \"giorni passati\": diffInGiorni\n    }\n  }];\n} catch (error) {\n  return [{\n    json: {\n      ...input,\n      \"errore\": \"Errore nel parsing delle date\",\n      \"dettaglio\": error.message\n    }\n  }];\n}\n"
          },
          {
            "parameters": {
              "operation": "upsert",
              "schema": {
                "__rl": true,
                "mode": "list",
                "value": "public"
              },
              "table": {
                "__rl": true,
                "value": "return_orders",
                "mode": "list",
                "cachedResultName": "return_orders"
              },
              "columns": {
                "mappingMode": "defineBelow",
                "value": {},
                "matchingColumns": [],
                "schema": [
                  {
                    "id": "order_found",
                    "displayName": "order_found",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "rma_id",
                    "displayName": "rma_id",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "customer_full_name",
                    "displayName": "customer_full_name",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "customer_email",
                    "displayName": "customer_email",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_reference",
                    "displayName": "order_reference",
                    "required": true,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": true
                  },
                  {
                    "id": "data_ricezione_merce",
                    "displayName": "data_ricezione_merce",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "dateTime",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "data_inoltro_richiesta",
                    "displayName": "data_inoltro_richiesta",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "dateTime",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "motivo_restituzione",
                    "displayName": "motivo_restituzione",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "descrizione_problema",
                    "displayName": "descrizione_problema",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "foto_allegate",
                    "displayName": "foto_allegate",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "nome_foto_allegata",
                    "displayName": "nome_foto_allegata",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "testo_estratto",
                    "displayName": "testo_estratto",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "descrizione_immagine",
                    "displayName": "descrizione_immagine",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_name",
                    "displayName": "order_products_0_name",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_reference",
                    "displayName": "order_products_0_reference",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_ean",
                    "displayName": "order_products_0_ean",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_quantity",
                    "displayName": "order_products_0_quantity",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "number",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_unit_price",
                    "displayName": "order_products_0_unit_price",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_0_total_price",
                    "displayName": "order_products_0_total_price",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_name",
                    "displayName": "order_products_1_name",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_reference",
                    "displayName": "order_products_1_reference",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_ean",
                    "displayName": "order_products_1_ean",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_quantity",
                    "displayName": "order_products_1_quantity",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "number",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_unit_price",
                    "displayName": "order_products_1_unit_price",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "order_products_1_total_price",
                    "displayName": "order_products_1_total_price",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "shipment_arrival_date",
                    "displayName": "shipment_arrival_date",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "dateTime",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "shipment_tracking_number",
                    "displayName": "shipment_tracking_number",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "shipment_tracking_url",
                    "displayName": "shipment_tracking_url",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "reso_autorizzato",
                    "displayName": "reso_autorizzato",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "giorni_trascorsi",
                    "displayName": "giorni_trascorsi",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "number",
                    "canBeUsedToMatch": false
                  },
                  {
                    "id": "codice_richiesta_form",
                    "displayName": "codice_richiesta_form",
                    "required": false,
                    "defaultMatch": false,
                    "display": true,
                    "type": "string",
                    "canBeUsedToMatch": false
                  }
                ],
                "attemptToConvertTypes": false,
                "convertFieldsToString": false
              },
              "options": {}
            },
            "type": "n8n-nodes-base.postgres",
            "typeVersion": 2.6,
            "position": [
              380,
              680
            ],
            "id": "eec45c2e-0e1d-4910-b47c-3e70417cd16a",
            "name": "UPSERT CAMPI RMA",
            "credentials": {
              "postgres": {
                "id": "jBT1O3LaStZrwqsC",
                "name": "Postgres Supabase TEC"
              }
            }
          }
        ],
        "connections": {
          "Genera RMA": {
            "main": [
              []
            ]
          },
          "Prepara Email": {
            "main": [
              []
            ]
          },
          "On form submission": {
            "main": [
              [
                {
                  "node": "Mappa Dati",
                  "type": "main",
                  "index": 0
                },
                {
                  "node": "Estrai Testo",
                  "type": "main",
                  "index": 0
                },
                {
                  "node": "Carica immagini Merce",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Prepara Dati": {
            "main": [
              []
            ]
          },
          "Genera RMA1": {
            "main": [
              []
            ]
          },
          "Convert to File1": {
            "main": [
              []
            ]
          },
          "Estrai Testo": {
            "main": [
              [
                {
                  "node": "Formatta Dati",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Validazione File": {
            "main": [
              []
            ]
          },
          "Mappa Dati": {
            "main": [
              [
                {
                  "node": "Merge",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Formatta Dati": {
            "main": [
              [
                {
                  "node": "Merge",
                  "type": "main",
                  "index": 1
                }
              ]
            ]
          },
          "Merge": {
            "main": [
              [
                {
                  "node": "Merge1",
                  "type": "main",
                  "index": 0
                },
                {
                  "node": "MAPPA NUMERO ORDINE",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Google Gemini Chat Model": {
            "ai_languageModel": [
              [
                {
                  "node": "VALIDAZIONE E INTAKE",
                  "type": "ai_languageModel",
                  "index": 0
                }
              ]
            ]
          },
          "Call n8n Workflow Tool": {
            "ai_tool": [
              [
                {
                  "node": "VALIDAZIONE E INTAKE",
                  "type": "ai_tool",
                  "index": 0
                }
              ]
            ]
          },
          "Supabase": {
            "ai_tool": [
              [
                {
                  "node": "VALIDAZIONE E INTAKE",
                  "type": "ai_tool",
                  "index": 0
                }
              ]
            ]
          },
          "Carica immagini Merce": {
            "main": [
              [
                {
                  "node": "Mappa nome File",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "If": {
            "main": [
              [
                {
                  "node": "Genera RMA",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Genera RMA1",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Mappa nome File": {
            "main": [
              [
                {
                  "node": "Merge",
                  "type": "main",
                  "index": 2
                }
              ]
            ]
          },
          "MAPPA NUMERO ORDINE": {
            "main": [
              [
                {
                  "node": "Execute Workflow",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "INSERT CAMPI RMA": {
            "main": [
              []
            ]
          },
          "Execute Workflow": {
            "main": [
              [
                {
                  "node": "Merge1",
                  "type": "main",
                  "index": 1
                }
              ]
            ]
          },
          "Merge1": {
            "main": [
              [
                {
                  "node": "numero ordine esiste?",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "numero ordine esiste?": {
            "main": [
              [
                {
                  "node": "Validazione ed RMA",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Form",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "If1": {
            "main": [
              [
                {
                  "node": "UPSERT CAMPI RMA",
                  "type": "main",
                  "index": 0
                }
              ],
              [
                {
                  "node": "Form1",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          },
          "Validazione ed RMA": {
            "main": [
              [
                {
                  "node": "If1",
                  "type": "main",
                  "index": 0
                }
              ]
            ]
          }
        },
        "settings": {
          "executionOrder": "v1"
        },
        "staticData": null,
        "meta": {
          "templateCredsSetupCompleted": true
        },
        "pinData": {
          "Form1": [
            {
              "json": {
                "Nome e Cognome cliente": "Carlo martino",
                "Email di conferma ordine": "supplires@tecsolutions.app",
                "Nr Ordine": "WHQTNRXIZ",
                "Data ricezione merce": "2025-06-13",
                "Motivo della restituzione ": "Ho ricevuto merce sbagliata",
                "Descrizione del problema ": "merce completamente sbagliata",
                "Foto allegate?": "false",
                "data inoltro richiesta": "2025-06-22",
                "testo_estratto": "1. \n\n```\nNANKANG \nWINTER ACTIVA\nN-607+\n215/55 R16\n97V XL\n\nE\nC\n72 dB\n\nC\n\nEU\n```\n\n2.",
                "descrizione_immagine": "L'immagine mostra un pacco di quattro pneumatici sovrapposti e avvolti in pellicola trasparente da imballaggio. Su uno dei pneumatici è visibile un'etichetta informativa applicata lateralmente, con indicazioni tecniche e classificazioni energetiche. L'etichetta sembra integra e leggibile. I pneumatici appaiono nuovi e non mostrano segni di usura o danni visibili.\n\n---\n\n### Analisi dettagliata:\n\n#### INFORMAZIONI PRODOTTO:\n- **Codice prodotto/SKU:** Non identificato chiaramente nell’etichetta visibile (non compare nessun codice con indicazioni come SKU, CODICE, ART, REF).\n- **Dimensioni pneumatico:** **215/55 R16** (formato standard per pneumatici)\n- **Marca/Brand:** **Nankang**\n- **Modello:** **Winter Activa N-607+**\n- **Numero serie:** Non visibile sull’etichetta mostrata\n- **Data di produzione:** Non indicata sull’etichetta visibile\n\n#### ANALISI PROBLEMI (dalla descrizione dell'imm",
                "Nome Foto Allegata": "WHQTNRXIZ - Carlo martino - 2025-06-13",
                "orderFound": true,
                "order_reference": "WHQTNRXIZ",
                "order_status": "Consegnato",
                "order_shipping_number": "1ZR1J1466800230797",
                "order_payment_method": "PayPal",
                "order_date_created": "2025-06-09 12:22:57",
                "order_date_updated": "2025-06-20 21:33:22",
                "order_total_paid": "€ 211.00",
                "order_total_products": "€ 161.36",
                "order_total_products_with_tax": "€ 196.84",
                "order_products_0_name": "NEXEN N BLUE HD PLUS 155/65 R14 75T",
                "order_products_0_reference": "981110000163006",
                "order_products_0_ean": "8807622509902",
                "order_products_0_quantity": 4,
                "order_products_0_unit_price": "€ 49.21",
                "order_products_0_total_price": "€ 196.84",
                "customer_full_name": "Carlo Martino",
                "customer_email": "carlo.martino@martino.it",
                "customer_phone": "0805618333",
                "customer_is_active": true,
                "customer_customer_since": "2019-04-30 18:53:35",
                "delivery_recipient": "Carlo Martino",
                "delivery_street": "Via Delle Murge 80",
                "delivery_city": "BARI",
                "delivery_postcode": "70124",
                "delivery_country": "Italia",
                "delivery_phone": "0805618333",
                "shipment_tracking_number": "1ZR1J1466800230797",
                "shipment_tracking_url": "https://www.ups.com/track?loc=it_IT&tracknum=1ZR1J1466800230797&requester=WT/trackdetails",
                "shipment_latest_status": "Consegnato",
                "shipment_latest_status_date": "2025-06-13T11:04:00+00:00",
                "shipment_departure_date": "2025-06-11T13:33:00+00:00",
                "shipment_arrival_date": "2025-06-13T11:04:00+00:00",
                "shipment_delivery_history_0": "2025-06-13: Consegnato",
                "shipment_delivery_history_1": "2025-06-13: In consegna oggi",
                "shipment_delivery_history_2": "2025-06-13: In elaborazione presso la struttura UPS",
                "shipment_delivery_history_3": "2025-06-12: Partito dal centro",
                "shipment_delivery_history_4": "2025-06-12: Arrivato al centro",
                "shipment_delivery_history_5": "2025-06-12: Partito dal centro",
                "shipment_delivery_history_6": "2025-06-12: Arrivato al centro",
                "shipment_delivery_history_7": "2025-06-11: Il mittente ha creato un'etichetta, UPS non ha ancora ricevuto il pacco",
                "Response": "✅ Ordine trovato: WHQTNRXIZ",
                "shipment_arrival_date_normalizzata": "2025-06-13",
                "data_inoltro_richiesta_normalizzata": "2025-06-22",
                "reso richiesto entro 14 giorni": true,
                "giorni passati": 9
              }
            }
          ]
        },
        "versionId": "f696720d-965e-4727-823e-a38652a9db49",
        "triggerCount": 1,
        "shared": [
          {
            "createdAt": "2025-06-20T13:50:12.562Z",
            "updatedAt": "2025-06-20T13:50:12.562Z",
            "role": "workflow:owner",
            "workflowId": "053vrF50XdC1ciOA",
            "projectId": "faRAVziI0wwHAtrH",
            "project": {
              "createdAt": "2025-05-08T14:10:38.888Z",
              "updatedAt": "2025-05-08T14:14:47.889Z",
              "id": "faRAVziI0wwHAtrH",
              "name": "Tiziano Annicchiarico <tiziano.annicchiarico@tecsolutions.org>",
              "type": "personal",
              "icon": null,
              "description": null,
              "projectRelations": [
                {
                  "createdAt": "2025-05-08T14:10:38.888Z",
                  "updatedAt": "2025-05-08T14:10:38.888Z",
                  "role": "project:personalOwner",
                  "userId": "d2011ea3-1757-483b-807c-1a1cadfe7618",
                  "projectId": "faRAVziI0wwHAtrH",
                  "user": {
                    "createdAt": "2025-05-08T14:10:38.611Z",
                    "updatedAt": "2025-08-11T22:01:00.000Z",
                    "id": "d2011ea3-1757-483b-807c-1a1cadfe7618",
                    "email": "tiziano.annicchiarico@tecsolutions.org",
                    "firstName": "Tiziano",
                    "lastName": "Annicchiarico",
                    "personalizationAnswers": {
                      "version": "v4",
                      "personalization_survey_submitted_at": "2025-05-08T14:15:03.626Z",
                      "personalization_survey_n8n_version": "1.91.3",
                      "companyType": "personal",
                      "reportedSource": "google"
                    },
                    "settings": {
                      "userActivated": true,
                      "easyAIWorkflowOnboarded": true,
                      "firstSuccessfulWorkflowId": "43vTbwmNKzDK3knK",
                      "userActivatedAt": 1746743405019,
                      "npsSurvey": {
                        "responded": true,
                        "lastShownAt": 1747066778901
                      }
                    },
                    "role": "global:owner",
                    "disabled": false,
                    "mfaEnabled": false,
                    "lastActiveAt": "2025-08-11",
                    "isPending": false
                  }
                }
              ]
            }
          }
        ],
        "tags": []
      },
      "structure": {
        "type": "object",
        "properties": {
          "createdAt": {
            "type": "string",
            "value": "2025-06-20T13:50:12.556Z"
          },
          "updatedAt": {
            "type": "string",
            "value": "2025-06-28T14:35:35.000Z"
          },
          "id": {
            "type": "string",
            "value": "053vrF50XdC1ciOA"
          },
          "name": {
            "type": "string",
            "value": "RETURN VALIDATION & INTAKE"
          },
          "active": {
            "type": "boolean",
            "value": true
          },
          "isArchived": {
            "type": "boolean",
            "value": false
          },
          "nodes": {
            "type": "array",
            "length": 32,
            "items": {
              "type": "object",
              "properties": {
                "parameters": {
                  "type": "object",
                  "properties": {
                    "jsCode": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                },
                "id": {
                  "type": "string",
                  "value": "38eac349-913b-4304-91f6-77e2762aa33e"
                },
                "name": {
                  "type": "string",
                  "value": "Prepara Dati"
                },
                "type": {
                  "type": "string",
                  "value": "n8n-nodes-base.code"
                },
                "typeVersion": {
                  "type": "number",
                  "value": 1
                },
                "position": {
                  "type": "array",
                  "length": 2,
                  "items": {
                    "type": "object",
                    "description": "nested object (depth limit)"
                  }
                }
              }
            }
          },
          "connections": {
            "type": "object",
            "properties": {
              "Genera RMA": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Prepara Email": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "On form submission": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Prepara Dati": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Genera RMA1": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Convert to File1": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Estrai Testo": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Validazione File": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Mappa Dati": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Formatta Dati": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Merge": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Google Gemini Chat Model": {
                "type": "object",
                "properties": {
                  "ai_languageModel": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Call n8n Workflow Tool": {
                "type": "object",
                "properties": {
                  "ai_tool": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Supabase": {
                "type": "object",
                "properties": {
                  "ai_tool": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Carica immagini Merce": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "If": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 2,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Mappa nome File": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "MAPPA NUMERO ORDINE": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "INSERT CAMPI RMA": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Execute Workflow": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Merge1": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "numero ordine esiste?": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 2,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "If1": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 2,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              },
              "Validazione ed RMA": {
                "type": "object",
                "properties": {
                  "main": {
                    "type": "array",
                    "length": 1,
                    "items": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              }
            }
          },
          "settings": {
            "type": "object",
            "properties": {
              "executionOrder": {
                "type": "string",
                "value": "v1"
              }
            }
          },
          "staticData": {
            "type": "null"
          },
          "meta": {
            "type": "object",
            "properties": {
              "templateCredsSetupCompleted": {
                "type": "boolean",
                "value": true
              }
            }
          },
          "pinData": {
            "type": "object",
            "properties": {
              "Form1": {
                "type": "array",
                "length": 1,
                "items": {
                  "type": "object",
                  "properties": {
                    "json": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              }
            }
          },
          "versionId": {
            "type": "string",
            "value": "f696720d-965e-4727-823e-a38652a9db49"
          },
          "triggerCount": {
            "type": "number",
            "value": 1
          },
          "shared": {
            "type": "array",
            "length": 1,
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "value": "2025-06-20T13:50:12.562Z"
                },
                "updatedAt": {
                  "type": "string",
                  "value": "2025-06-20T13:50:12.562Z"
                },
                "role": {
                  "type": "string",
                  "value": "workflow:owner"
                },
                "workflowId": {
                  "type": "string",
                  "value": "053vrF50XdC1ciOA"
                },
                "projectId": {
                  "type": "string",
                  "value": "faRAVziI0wwHAtrH"
                },
                "project": {
                  "type": "object",
                  "properties": {
                    "createdAt": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "updatedAt": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "id": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "name": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "type": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "icon": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "description": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    },
                    "projectRelations": {
                      "type": "object",
                      "description": "nested object (depth limit)"
                    }
                  }
                }
              }
            }
          },
          "tags": {
            "type": "array",
            "value": []
          }
        }
      }
    },
    "POST /workflows/{id}/execute": {
      "status": "not_tested",
      "description": "Executes a workflow",
      "expected_params": {
        "body": {
          "data": "object - Input data for workflow"
        }
      }
    },
    "POST /workflows/{id}/activate": {
      "status": "not_tested",
      "description": "Activates a workflow",
      "expected_response": {
        "success": true
      }
    },
    "POST /workflows/{id}/deactivate": {
      "status": "not_tested",
      "description": "Deactivates a workflow",
      "expected_response": {
        "success": true
      }
    }
  },
  "Execution Endpoints": {
    "GET /executions": {
      "status": 200,
      "headers": {
        "content-length": "490",
        "content-type": "application/json; charset=utf-8",
        "date": "Tue, 12 Aug 2025 12:10:09 GMT",
        "etag": "W/\"1ea-KJ/05iueX2C0cqWf7mKFA1SypMo\"",
        "strict-transport-security": "max-age=315360000; includeSubDomains; preload",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-xss-protection": "1; mode=block"
      },
      "data": {
        "data": [
          {
            "id": "110412",
            "finished": true,
            "mode": "trigger",
            "retryOf": null,
            "retrySuccessId": null,
            "startedAt": "2025-08-12T12:05:28.028Z",
            "stoppedAt": "2025-08-12T12:05:28.162Z",
            "workflowId": "KKSqAvsx6IO89YIJ",
            "waitTill": null
          },
          {
            "id": "110411",
            "finished": true,
            "mode": "trigger",
            "retryOf": null,
            "retrySuccessId": null,
            "startedAt": "2025-08-12T12:00:44.022Z",
            "stoppedAt": "2025-08-12T12:01:11.076Z",
            "workflowId": "43vTbwmNKzDK3knK",
            "waitTill": null
          }
        ],
        "nextCursor": "eyJsYXN0SWQiOiIxMTA0MTEiLCJsaW1pdCI6Mn0="
      },
      "structure": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "length": 2,
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "value": "110412"
                },
                "finished": {
                  "type": "boolean",
                  "value": true
                },
                "mode": {
                  "type": "string",
                  "value": "trigger"
                },
                "retryOf": {
                  "type": "null"
                },
                "retrySuccessId": {
                  "type": "null"
                },
                "startedAt": {
                  "type": "string",
                  "value": "2025-08-12T12:05:28.028Z"
                },
                "stoppedAt": {
                  "type": "string",
                  "value": "2025-08-12T12:05:28.162Z"
                },
                "workflowId": {
                  "type": "string",
                  "value": "KKSqAvsx6IO89YIJ"
                },
                "waitTill": {
                  "type": "null"
                }
              }
            }
          },
          "nextCursor": {
            "type": "string",
            "value": "eyJsYXN0SWQiOiIxMTA0MTEiLCJsaW1pdCI6Mn0="
          }
        }
      }
    },
    "GET /executions/{id}": {
      "status": 200,
      "headers": {
        "content-length": "286",
        "content-type": "application/json; charset=utf-8",
        "date": "Tue, 12 Aug 2025 12:10:09 GMT",
        "etag": "W/\"11e-e23rMuDCtHwqVsyumewOSJcOQiY\"",
        "strict-transport-security": "max-age=315360000; includeSubDomains; preload",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-xss-protection": "1; mode=block"
      },
      "data": {
        "id": "110412",
        "finished": true,
        "mode": "trigger",
        "retryOf": null,
        "retrySuccessId": null,
        "status": "success",
        "createdAt": "2025-08-12T12:05:28.004Z",
        "startedAt": "2025-08-12T12:05:28.028Z",
        "stoppedAt": "2025-08-12T12:05:28.162Z",
        "deletedAt": null,
        "workflowId": "KKSqAvsx6IO89YIJ",
        "waitTill": null
      },
      "structure": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "value": "110412"
          },
          "finished": {
            "type": "boolean",
            "value": true
          },
          "mode": {
            "type": "string",
            "value": "trigger"
          },
          "retryOf": {
            "type": "null"
          },
          "retrySuccessId": {
            "type": "null"
          },
          "status": {
            "type": "string",
            "value": "success"
          },
          "createdAt": {
            "type": "string",
            "value": "2025-08-12T12:05:28.004Z"
          },
          "startedAt": {
            "type": "string",
            "value": "2025-08-12T12:05:28.028Z"
          },
          "stoppedAt": {
            "type": "string",
            "value": "2025-08-12T12:05:28.162Z"
          },
          "deletedAt": {
            "type": "null"
          },
          "workflowId": {
            "type": "string",
            "value": "KKSqAvsx6IO89YIJ"
          },
          "waitTill": {
            "type": "null"
          }
        }
      }
    },
    "DELETE /executions/{id}": {
      "status": "not_tested",
      "description": "Deletes an execution",
      "expected_response": {
        "success": true
      }
    },
    "GET /executions-current": {
      "status": 404,
      "error": "Request failed with status code 404",
      "data": {
        "message": "not found"
      }
    }
  },
  "Credential Endpoints": {
    "GET /credentials": {
      "status": 405,
      "error": "Request failed with status code 405",
      "data": {
        "message": "GET method not allowed"
      }
    },
    "GET /credentials/schema": {
      "status": 405,
      "error": "Request failed with status code 405",
      "data": {
        "message": "GET method not allowed"
      }
    }
  },
  "Node Endpoints": {
    "GET /node-types": {
      "status": 404,
      "error": "Request failed with status code 404",
      "data": {
        "message": "not found"
      }
    }
  },
  "Tag Endpoints": {
    "GET /tags": {
      "status": 200,
      "headers": {
        "content-type": "application/json; charset=utf-8",
        "date": "Tue, 12 Aug 2025 12:10:10 GMT",
        "etag": "W/\"7b7-T3DMDSJ10XtwAWrQhUh4eXppj3c\"",
        "strict-transport-security": "max-age=315360000; includeSubDomains; preload",
        "vary": "Accept-Encoding",
        "x-content-type-options": "nosniff",
        "x-xss-protection": "1; mode=block",
        "transfer-encoding": "chunked"
      },
      "data": {
        "data": [
          {
            "createdAt": "2025-05-08T14:16:30.112Z",
            "updatedAt": "2025-05-08T14:16:30.112Z",
            "id": "2mUfTXhBtOXZNftN",
            "name": "embedding"
          },
          {
            "createdAt": "2025-05-08T22:21:18.131Z",
            "updatedAt": "2025-05-08T22:21:18.131Z",
            "id": "jubCCEoeIKClOxYP",
            "name": "GommeGo"
          },
          {
            "createdAt": "2025-05-09T12:53:46.723Z",
            "updatedAt": "2025-05-09T12:53:46.723Z",
            "id": "PJ7uHSoq17OniGvF",
            "name": "Diagnostic"
          },
          {
            "createdAt": "2025-05-09T12:54:15.672Z",
            "updatedAt": "2025-05-09T12:54:15.672Z",
            "id": "Vh2Oww2GTJVNG58l",
            "name": "Vector"
          },
          {
            "createdAt": "2025-05-09T12:57:41.342Z",
            "updatedAt": "2025-05-09T12:57:41.342Z",
            "id": "Bf0tQm2tsLtJF4Pv",
            "name": "Chatbot"
          },
          {
            "createdAt": "2025-05-09T12:57:51.807Z",
            "updatedAt": "2025-05-09T12:57:51.807Z",
            "id": "Yo0cYUpUntQXC4ss",
            "name": "Email_AI"
          },
          {
            "createdAt": "2025-05-09T13:03:26.389Z",
            "updatedAt": "2025-05-09T13:03:26.389Z",
            "id": "B8xp7ux7y1PwhWWc",
            "name": "Documents"
          },
          {
            "createdAt": "2025-05-09T13:03:43.543Z",
            "updatedAt": "2025-05-09T13:03:43.543Z",
            "id": "WyLlBAGb7xVzjxID",
            "name": "Text Extractor"
          },
          {
            "createdAt": "2025-05-09T13:08:41.831Z",
            "updatedAt": "2025-05-09T13:08:41.831Z",
            "id": "gwDByRudkVAhr8kA",
            "name": "Pinecone"
          },
          {
            "createdAt": "2025-05-20T16:18:35.243Z",
            "updatedAt": "2025-05-20T16:18:35.243Z",
            "id": "iQ4UVxoCV7XMSHhj",
            "name": "Tracking"
          },
          {
            "createdAt": "2025-05-21T07:25:07.626Z",
            "updatedAt": "2025-05-21T07:25:07.626Z",
            "id": "Pco6beEBsvBtIEKr",
            "name": "Commerciale"
          },
          {
            "createdAt": "2025-05-21T21:03:26.349Z",
            "updatedAt": "2025-05-21T21:03:26.349Z",
            "id": "IxZ4HIpCFnCNyBo7",
            "name": "SUB"
          },
          {
            "createdAt": "2025-05-21T22:22:03.503Z",
            "updatedAt": "2025-05-21T22:22:03.503Z",
            "id": "g1WRzpuCGpEx2Lq1",
            "name": "MULTIAGENT"
          },
          {
            "createdAt": "2025-05-23T20:35:14.796Z",
            "updatedAt": "2025-05-23T20:35:14.796Z",
            "id": "cQjkBOzWR4bjqr3x",
            "name": "GO"
          },
          {
            "createdAt": "2025-05-27T17:44:30.668Z",
            "updatedAt": "2025-05-27T17:44:30.668Z",
            "id": "Im4bH6VaXwdyHzpU",
            "name": "prova"
          },
          {
            "createdAt": "2025-06-16T18:45:12.858Z",
            "updatedAt": "2025-06-16T18:45:12.858Z",
            "id": "XXT8LAiUHDUz3oSJ",
            "name": "REPORT"
          }
        ],
        "nextCursor": null
      },
      "structure": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "length": 16,
            "items": {
              "type": "object",
              "properties": {
                "createdAt": {
                  "type": "string",
                  "value": "2025-05-08T14:16:30.112Z"
                },
                "updatedAt": {
                  "type": "string",
                  "value": "2025-05-08T14:16:30.112Z"
                },
                "id": {
                  "type": "string",
                  "value": "2mUfTXhBtOXZNftN"
                },
                "name": {
                  "type": "string",
                  "value": "embedding"
                }
              }
            }
          },
          "nextCursor": {
            "type": "null"
          }
        }
      }
    }
  },
  "System Endpoints": {
    "GET /version": {
      "status": 404,
      "error": "Request failed with status code 404",
      "data": {
        "message": "not found"
      }
    },
    "GET /health": {
      "status": 404,
      "error": "Request failed with status code 404",
      "data": {
        "message": "not found"
      }
    },
    "GET /metrics": {
      "status": 404,
      "error": "Request failed with status code 404",
      "data": {
        "message": "not found"
      }
    }
  }
}